{"version":3,"file":"static/js/607.c8f5a0fa.chunk.js","mappings":"+QACA,EAAkC,0CAAlC,EAA4F,wCAA5F,EAA63B,mCAA73B,EAAk7B,0CAAl7B,EAAy+B,qCAAz+B,EAAwhC,kCAAxhC,EAAokC,kC,UCApkC,EAA2B,yBAA3B,EAA6D,uB,SCIhDA,EAAS,WACpB,IAAMC,GAAmBC,EAAAA,EAAAA,IAAYC,EAAAA,IAErC,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACGL,IACCG,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAaF,UAC3BF,EAAAA,EAAAA,KAACK,EAAAA,GAAY,CACXC,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,MAAM,UACNC,OAAO,IACPC,UAAU,qBACVC,aAAc,CAAC,EACfC,aAAcT,OAM1B,ECVaU,EAAmB,SAAHC,GAAsB,IAAhBb,EAAQa,EAARb,SAG3Bc,IADYlB,EAAAA,EAAAA,IAAYmB,EAAAA,KACdnB,EAAAA,EAAAA,IAAYoB,EAAAA,KAEtBC,IADQrB,EAAAA,EAAAA,IAAYsB,EAAAA,KACNtB,EAAAA,EAAAA,IAAYuB,EAAAA,KAE1BC,GAAWC,EAAAA,EAAAA,MAuBjB,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,IAAIC,EAAAA,EAAe,aAAc,CAChDC,aAAc,MACdC,aAAc,IACdC,UAAW,IACXC,gBAAgB,IAIlB,OAAO,WACLL,EAASM,SACX,CACF,GAAG,CAACf,KAGFgB,EAAAA,EAAAA,MAAA,OAAK7B,UAAWC,EAAoBF,SAAA,EAClCF,EAAAA,EAAAA,KAAA,MAAIG,UAAWC,EAAkBF,SAAC,aACjCA,GAED8B,EAAAA,EAAAA,MAAA,OACE7B,UAAWC,EACX6B,MAAO,CACLC,SAAU,YACVhC,SAAA,EAEFF,EAAAA,EAAAA,KAACJ,EAAM,KACPI,EAAAA,EAAAA,KAAA,MACEG,UAAS,GAAAgC,OAAK/B,EAAc,YAC5B6B,MAAO,CACL1B,OAAO,SAAD4B,OACO,IAAnBnB,EAAQoB,OAAe,QAAU,OAAM,SAEjClC,SAEDc,EAAQqB,KAAI,SAAAC,GAAG,OACdtC,EAAAA,EAAAA,KAAA,MAAiBG,UAAWC,EAAa,UAASkC,EAAIC,GAAGrC,UACvDF,EAAAA,EAAAA,KAAA,KAAGwC,KAAMF,EAAIG,IAAIvC,UACfF,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAcsC,IAAKJ,EAAIG,IAAKE,IAAI,QAF3CL,EAAIC,GAIR,UAKTvC,EAAAA,EAAAA,KAAA,OAAAE,SAC0B,IAAnBc,EAAQoB,QACPpC,EAAAA,EAAAA,KAAA,UAAQ4C,QArDW,WAC7BC,QAAQC,IAAI3B,GACZ,IAAM4B,EAAW5B,EAAc,EAE/BG,GAAS0B,EAAAA,EAAAA,IAAiB,CAAEC,QAASF,IACvC,EAgDuD5C,UAAWC,EAAYF,SAAC,cAGjE,SAIlB,ECpFA,EAA8B,wCCQjBgD,G,QAAW,WACtB,IAAMC,GAAiBC,EAAAA,EAAAA,SAAO,GAExB9B,GAAWC,EAAAA,EAAAA,MAQjB,OANAC,EAAAA,EAAAA,YAAU,WACF2B,EAAeE,UACnBF,EAAeE,SAAU,EACzB/B,GAASgC,EAAAA,EAAAA,OACX,GAAG,KAGHtD,EAAAA,EAAAA,KAAA,OAAKG,UAAWC,EAAgBF,UAC9BF,EAAAA,EAAAA,KAACc,EAAgB,KAGvB,GAEA,G","sources":["webpack://react-homework-template/./src/components/TasksPendingList/TasksPendingList.module.css?93e0","webpack://react-homework-template/./src/components/dogLoader/Loader.module.css?6432","components/dogLoader/Loader.jsx","components/TasksPendingList/TasksPendingList.jsx","webpack://react-homework-template/./src/components/SortedPendingTasks/SortedPendingTasks.module.css?cc30","components/SortedPendingTasks/SortedPendingTasks.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactsSection\":\"TasksPendingList_contactsSection__CqPij\",\"contactsTitle\":\"TasksPendingList_contactsTitle__RZMsU\",\"contactsList\":\"TasksPendingList_contactsList__eTg0L\",\"contactsListAlt\":\"TasksPendingList_contactsListAlt__bBtUA\",\"contactsData\":\"TasksPendingList_contactsData__eWahK\",\"contactsPhone\":\"TasksPendingList_contactsPhone__kq-C-\",\"contactsItemWrapper\":\"TasksPendingList_contactsItemWrapper__vPW+m\",\"contactsItem\":\"TasksPendingList_contactsItem__FNPIO\",\"contactsDetails\":\"TasksPendingList_contactsDetails__N7fJn\",\"contactsName\":\"TasksPendingList_contactsName__QbTXf\",\"checkbox\":\"TasksPendingList_checkbox__wJk3n\",\"contactsButtonArea\":\"TasksPendingList_contactsButtonArea__f01sK\",\"contactsButton\":\"TasksPendingList_contactsButton__XjUHY\",\"navigationArea\":\"TasksPendingList_navigationArea__qKRwx\",\"navigationButton\":\"TasksPendingList_navigationButton__iIIqW\",\"catImage\":\"TasksPendingList_catImage__meQDZ\",\"catGalleryCover\":\"TasksPendingList_catGalleryCover__FdkZj\",\"catGallery\":\"TasksPendingList_catGallery__Vnx20\",\"catItem\":\"TasksPendingList_catItem__mRBJv\",\"loadBtn\":\"TasksPendingList_loadBtn__K2Xlp\"};","// extracted by mini-css-extract-plugin\nexport default {\"backDrop\":\"Loader_backDrop__5XjFH\",\"loader\":\"Loader_loader__36D8w\"};","import { useSelector } from 'react-redux';\nimport { ThreeCircles } from 'react-loader-spinner';\nimport css from './Loader.module.css';\nimport { selectIsDogPicsLoading } from '../../redux/AppRedux/selectors';\n\nexport const Loader = () => {\n  const isDogPicsLoading = useSelector(selectIsDogPicsLoading);\n\n  return (\n    <>\n      {isDogPicsLoading && (\n        <div className={css.backDrop}>\n          <ThreeCircles\n            visible={true}\n            height=\"60\"\n            width=\"60\"\n            color=\"#9225ff\"\n            radius=\"9\"\n            ariaLabel=\"three-dots-loading\"\n            wrapperStyle={{}}\n            wrapperClass={css.loader}\n          />\n        </div>\n      )}\n    </>\n  );\n};\n","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { useState, useEffect } from 'react';\nimport {\n  selectError,\n  selectIsLoading,\n  selectDogPics,\n  selectDogPageNums\n} from '../../redux/AppRedux/selectors';\nimport {fetchMoreDogPics, fetchDogPics} from '../../redux/AppRedux/operations';\nimport css from './TasksPendingList.module.css';\nimport { Loader } from '../dogLoader/Loader';\n\nexport const TasksPendingList = ({ children }) => {\n\n  const isLoading = useSelector(selectIsLoading);\n  const dogPics = useSelector(selectDogPics);\n  const error = useSelector(selectError);\n  const dogPageNums = useSelector(selectDogPageNums);\n  \n  const dispatch = useDispatch();\n\n  const handleGalleryButtonPress = () => {\n      console.log(dogPageNums);\n      const storeVar = dogPageNums + 1;\n  \n      dispatch(fetchMoreDogPics({ pageNum: storeVar }));\n    }\n\n  useEffect(() => {\n    const lightbox = new SimpleLightbox('.gallery a', {\n      captionsData: 'alt',\n      captionDelay: 250,\n      closeText: 'X',\n      animationSlide: false,\n    });\n\n    // Cleanup function\n    return () => {\n      lightbox.destroy();\n    };\n  }, [dogPics]);\n\n  return (\n    <div className={css.contactsSection}>\n      <h3 className={css.contactsTitle}>Dog Pics</h3>\n      {children}\n\n      <div\n        className={css.catGalleryCover}\n        style={{\n          position: 'relative',\n        }}\n      >\n        <Loader />\n        <ul\n          className={`${css.catGallery} gallery`}\n          style={{\n            height: `\n    ${dogPics.length === 0 ? '854px' : 'auto'}\n  `,\n          }}\n        >\n          {dogPics.map(pic => (\n            <li key={pic.id} className={css.catItem} data-id={pic.id}>\n              <a href={pic.url}>\n                <img className={css.catImage} src={pic.url} alt=\"\" />\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n        <div>\n              {dogPics.length !== 0 ? (\n                <button onClick={handleGalleryButtonPress} className={css.loadBtn}>\n                  Load More\n                </button>\n              ) : null}\n            </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"listWrapper\":\"SortedPendingTasks_listWrapper__NBhSD\"};","import { TasksPendingList } from '../TasksPendingList/TasksPendingList';\nimport { useEffect } from 'react';\nimport { fetchDogPics } from '../../redux/AppRedux/operations';\nimport { useDispatch } from 'react-redux';\nimport css from './SortedPendingTasks.module.css';\nimport 'flatpickr/dist/themes/material_blue.css';\nimport { useRef } from 'react';\n\n\nexport const Contacts = () => {\n  const hasInitialized = useRef(false);\n\n  const dispatch = useDispatch();\n\n  useEffect(()=>{\n      if (hasInitialized.current) return;\n      hasInitialized.current = true;\n      dispatch(fetchDogPics());\n    }, [])\n  \n  return (\n    <div className={css.listWrapper}>\n      <TasksPendingList />\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["Loader","isDogPicsLoading","useSelector","selectIsDogPicsLoading","_jsx","_Fragment","children","className","css","ThreeCircles","visible","height","width","color","radius","ariaLabel","wrapperStyle","wrapperClass","TasksPendingList","_ref","dogPics","selectIsLoading","selectDogPics","dogPageNums","selectError","selectDogPageNums","dispatch","useDispatch","useEffect","lightbox","SimpleLightbox","captionsData","captionDelay","closeText","animationSlide","destroy","_jsxs","style","position","concat","length","map","pic","id","href","url","src","alt","onClick","console","log","storeVar","fetchMoreDogPics","pageNum","Contacts","hasInitialized","useRef","current","fetchDogPics"],"sourceRoot":""}