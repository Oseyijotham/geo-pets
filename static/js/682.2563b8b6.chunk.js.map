{"version":3,"file":"static/js/682.2563b8b6.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/TasksCompletedList/TasksCompletedList.module.css?a025","components/TasksCompletedList/TasksCompletedList.jsx","webpack://react-homework-template/./src/components/SortedCompletedTasks/SortedCompletedTasks.module.css?d835","components/SortedCompletedTasks/icons.svg","components/SortedCompletedTasks/SortedCompletedTasks.jsx","redux/AppRedux/selectors.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formLabel\":\"Filter_formLabel__Ozoh5\",\"formInput\":\"Filter_formInput__XNLZn\",\"contactsSection\":\"Filter_contactsSection__lb9Ll\",\"contactsTitle\":\"Filter_contactsTitle__eTnDx\",\"contactsList\":\"Filter_contactsList__78f6h\",\"contactsData\":\"Filter_contactsData__q4ogS\",\"contactsPhone\":\"Filter_contactsPhone__hxyN-\",\"contactsItemWrapper\":\"Filter_contactsItemWrapper__-Mxdd\",\"contactsItem\":\"Filter_contactsItem__CHFiw\",\"contactsDetails\":\"Filter_contactsDetails__0UF-g\",\"contactsName\":\"Filter_contactsName__gRaQA\",\"checkbox\":\"Filter_checkbox__wp-8y\",\"contactsButtonArea\":\"Filter_contactsButtonArea__0a5PO\",\"contactsButton\":\"Filter_contactsButton__7e+W-\",\"navigationArea\":\"Filter_navigationArea__OTHql\",\"navigationButton\":\"Filter_navigationButton__xNnWu\"};","import { useSelector } from 'react-redux';\nimport { selectContacts } from '../../redux/AppRedux/selectors';\nimport {\n  selectContactsFilter,\n  selectFilterUp,\n  selectFilterDown\n} from '../../redux/AppRedux/selectors';\nimport { useDispatch } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport css from './Filter.module.css';\nimport { setFilter } from '../../redux/AppRedux/filterSlice';\nimport {\n  deleteContact,\n  openModal,\n  fetchContactById,\n  openMobileAndTabModal,\n  updateStatus,\n} from '../../redux/AppRedux/operations';\n\nexport const Filter = () => {\n  const searchTermId = nanoid();\n  const contacts = useSelector(selectContacts);\n  const filterUpper = useSelector(selectFilterUp);\n  const filterLower = useSelector(selectFilterDown);\n  const filterValue = useSelector(selectContactsFilter);\n  const dispatch = useDispatch();\n  const handleSearch = event => {\n    dispatch(setFilter(event.target.value));\n    console.log(event.target.value);\n  };\n  const bestMatches = contacts.filter(\n    contact =>\n      contact.name.toLowerCase().includes(filterValue.trim().toLowerCase()) &&\n      filterValue.trim() !== ''\n  );\n\n  const handleModalOpen = evt => {\n    if (evt.target.getAttribute('data-id')) {\n      const id = evt.currentTarget.getAttribute('data-id');\n      dispatch(fetchContactById(id));\n      dispatch(openModal());\n      dispatch(openMobileAndTabModal());\n    }\n  };\n\n  const handleDelete = evt => {\n    evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n    setTimeout(() => {\n      evt.target.style.boxShadow = 'none';\n    }, 1000);\n    dispatch(deleteContact(evt.target.name));\n  };\n\n   const handleChange = (evt) => {\n      dispatch(updateStatus({ status: evt.target.checked, myUpdateStatusId:evt.target.name}));\n    }\n\n  return (\n    <div className={css.contactList}>\n      <label htmlFor={searchTermId}>\n        <span className={css.formLabel}>Search Appointments By Customer:</span>\n        <input\n          type=\"text\"\n          placeholder=\"Enter Customer Name\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Enter Customer Name\"\n          required\n          onChange={handleSearch}\n          id={searchTermId}\n          autoComplete=\"off\"\n          className={css.formInput}\n          value={filterValue}\n        />\n      </label>\n\n      {filterValue !== '' && bestMatches.length !== 0 && (\n        <ul className={css.contactsList}>\n          {bestMatches.map(contact => {\n            const myindex = bestMatches.indexOf(contact);\n            if (myindex >= filterLower && myindex < filterUpper) {\n              return (\n                <li\n                  key={contact._id}\n                  data-id={contact._id}\n                  className={css.contactsItem}\n                  onClick={handleModalOpen}\n                >\n                  <span className={css.contactsData} data-id={contact._id}>\n                    <input\n                      type=\"checkbox\"\n                      className={css.checkbox}\n                      checked={contact.status}\n                      name={contact._id}\n                      onChange={handleChange}\n                    />\n                    :{' '}\n                    <span className={css.contactsPhone} data-id={contact._id}>\n                      {contact.name}\n                    </span>\n                  </span>\n                  <span className={css.contactsButtonArea}>\n                    <button\n                      type=\"submit\"\n                      className={css.contactsButton}\n                      name={contact._id}\n                      onClick={handleDelete}\n                    >\n                      Delete\n                    </button>\n                  </span>\n                </li>\n              );\n            }\n          })}\n        </ul>\n      )}\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsSection\":\"TasksCompletedList_contactsSection__zPZf2\",\"contactsTitle\":\"TasksCompletedList_contactsTitle__C-sbK\",\"contactsList\":\"TasksCompletedList_contactsList__rMpzJ\",\"contactsListAlt\":\"TasksCompletedList_contactsListAlt__1YXeP\",\"contactsData\":\"TasksCompletedList_contactsData__FCbD6\",\"contactsPhone\":\"TasksCompletedList_contactsPhone__o5lEI\",\"contactsItemWrapper\":\"TasksCompletedList_contactsItemWrapper__zitKQ\",\"contactsItem\":\"TasksCompletedList_contactsItem__gZe57\",\"contactsDetails\":\"TasksCompletedList_contactsDetails__0pLWn\",\"contactsName\":\"TasksCompletedList_contactsName__uqsAL\",\"checkbox\":\"TasksCompletedList_checkbox__86Cgb\",\"contactsButtonArea\":\"TasksCompletedList_contactsButtonArea__4SiYs\",\"contactsButton\":\"TasksCompletedList_contactsButton__iMJej\",\"navigationArea\":\"TasksCompletedList_navigationArea__rMVMK\",\"navigationButton\":\"TasksCompletedList_navigationButton__X7vix\"};","import { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { selectContacts } from '../../redux/AppRedux/selectors';\nimport {\n  selectContactsFilter,\n  selectFilterUp,\n  selectFilterDown,\n  selectError,\n  selectIsLoading,\n} from '../../redux/AppRedux/selectors';\nimport {\n  deleteContact,\n  openSortedCompletedModal,\n  fetchSortedCompletedContactById,\n  handleFilterFowardUp,\n  handleFilterFowardDown,\n  handleFilterBackwardUp,\n  handleFilterBackwardDown,\n  updateStatus,\n  openCompletedMobileAndTabModal,\n} from '../../redux/AppRedux/operations';\nimport css from './TasksCompletedList.module.css';\nexport const TasksCompletedList = ({ children }) => {\n  const contacts = useSelector(selectContacts);\n  const filterUp = useSelector(selectFilterUp);\n  const filterDown = useSelector(selectFilterDown);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  //const [taskStatus, setTaskStatus] = useState();\n  //let myContacts  \n  const dispatch = useDispatch();\n  const handleDelete = evt => {\n    evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n    setTimeout(() => {\n      evt.target.style.boxShadow = 'none';\n    }, 1000);\n    //console.log(evt.target.name);\n    dispatch(deleteContact(evt.target.name));\n    /*//dispatch(closeModal());\n    const exist = contacts.find(contact => contact._id === evt.target.name);\n    console.log(contacts);\n    if (exist === undefined) {\n      console.log('gvghi');\n      dispatch(closeModal());\n    }*/\n    \n  };\n  const filterValue = useSelector(selectContactsFilter);\n\n  const handleModalOpen = (evt) => {\n    if (evt.target.getAttribute('data-id')) {\n      //console.log('Modal opened!');\n\n      const id = evt.currentTarget.getAttribute('data-id');\n      //console.log(id);\n      dispatch(fetchSortedCompletedContactById(id));\n      dispatch(openSortedCompletedModal());\n      dispatch(openCompletedMobileAndTabModal());\n    }\n  };\n  const [lowerLimit, setLowerLimit] = useState(0);\n  const [upperLimit, setUpperLimit] = useState(4);\n\n\n  const handleForward = (evt) => {\n    evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n    setTimeout(() => {\n      evt.target.style.boxShadow = 'none';\n    }, 500);\n    //let fwdWar = lowerLimit + 4;\n    \n      setLowerLimit(lowerLimit + 4);\n      setUpperLimit(upperLimit + 4);\n    \n    /*if (filterValue !== \"\") {\n      console.log(\"OK\")\n      const str = filterUp;\n      const sto = filterDown\n      dispatch(handleFilterFowardUp(str));\n      dispatch(handleFilterFowardDown(sto));\n    }*/\n  }\n\n  const handleBackward = (evt) => {\n     evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n     setTimeout(() => {\n       evt.target.style.boxShadow = 'none';\n     }, 500);\n    //let fwdWar = lowerLimit + 4;\n    \n      setLowerLimit(lowerLimit - 4);\n      setUpperLimit(upperLimit - 4);\n    \n    /*if (filterValue !== '') {\n      const str1 = filterUp;\n      const sto1 = filterDown;\n       dispatch(handleFilterBackwardUp(str1));\n       dispatch(handleFilterBackwardDown(sto1));\n     }*/\n  };\n  \n  const handleChange = (evt) => {\n    dispatch(updateStatus({ status: evt.target.checked, myUpdateStatusId:evt.target.name}));\n  }\n  \n   const bestMatches = contacts.filter(\n     contact =>\n       contact.name.toLowerCase().includes(filterValue.trim().toLowerCase()) &&\n       filterValue.trim() !== ''\n  );\n  \n  const completedMatches = contacts.filter(\n    contact =>\n      contact.status === true\n  );\n\n  return (\n    <div className={css.contactsSection}>\n      <h3 className={css.contactsTitle}>Fulfilled</h3>\n      {children}\n\n      {completedMatches.length === 0 && (\n        <div className={css.contactsListAlt}>\n          {isLoading && !error && (\n            <b className={css.notification}>Loading Tasks...</b>\n          )}\n          {!isLoading && !error && (\n            <b className={css.notification}>No Appointments Here!!!</b>\n          )}\n          {!isLoading && error && <b className={css.notification}>Error!!!</b>}\n        </div>\n      )}\n      {completedMatches.length !== 0 && (\n        <ul className={css.contactsList}>\n          {console.log(completedMatches)}\n          {completedMatches.map(contact => {\n            const myindex = completedMatches.indexOf(contact);\n            if (\n              myindex >= lowerLimit &&\n              myindex < upperLimit \n            ) {\n              return (\n                <li\n                  key={contact._id}\n                  data-id={contact._id}\n                  className={css.contactsItem}\n                  onClick={handleModalOpen}\n                >\n                  <span className={css.contactsData} data-id={contact._id}>\n                    <input\n                      type=\"checkbox\"\n                      className={css.checkbox}\n                      checked={contact.status}\n                      name={contact._id}\n                      onChange={handleChange}\n                    />\n                    :{' '}\n                    <span className={css.contactsPhone} data-id={contact._id}>\n                      {contact.name}\n                    </span>\n                  </span>\n                  <span className={css.contactsButtonArea}>\n                    <button\n                      type=\"submit\"\n                      className={css.contactsButton}\n                      name={contact._id}\n                      onClick={handleDelete}\n                    >\n                      Delete\n                    </button>\n                  </span>\n                </li>\n              );\n            }\n          })}\n        </ul>\n      )}\n\n      <div className={css.navigationArea}>\n        {lowerLimit !== 0 && (\n          <button className={css.navigationButton} onClick={handleBackward}>\n            Prev\n          </button>\n        )}\n        {!(upperLimit > completedMatches.length) &&\n          upperLimit !== completedMatches.length && (\n            <button className={css.navigationButton} onClick={handleForward}>\n              Forward\n            </button>\n          )}\n      </div>\n\n      {filterValue !== '' && (\n        <div className={css.navigationArea}>\n          {filterDown !== 0 && (\n            <button className={css.navigationButton} onClick={handleBackward}>\n              Prev\n            </button>\n          )}\n          {/*!(filterUp > bestMatches.length) &&\n            filterUp !== bestMatches.length && (\n              <button className={css.navigationButton} onClick={handleForward}>\n                Forward\n              </button>\n            )*/}\n        </div>\n      )}\n    </div>\n  );\n};\n\n","// extracted by mini-css-extract-plugin\nexport default {\"notification\":\"SortedCompletedTasks_notification__6MTf5\",\"notificationShow\":\"SortedCompletedTasks_notificationShow__Jqwyy\",\"sortedWrapper\":\"SortedCompletedTasks_sortedWrapper__O6FpK\",\"coverWrapper\":\"SortedCompletedTasks_coverWrapper__-sMYd\",\"contactsWrapperSpace\":\"SortedCompletedTasks_contactsWrapperSpace__toNO9\",\"selected\":\"SortedCompletedTasks_selected__aEOTe\",\"contactsDetailsHide\":\"SortedCompletedTasks_contactsDetailsHide__N8FQh\",\"contactsDetailsShow\":\"SortedCompletedTasks_contactsDetailsShow__DR76z\",\"closeModal\":\"SortedCompletedTasks_closeModal__8X40X\",\"contactsDetailsArea\":\"SortedCompletedTasks_contactsDetailsArea__jikLk\",\"contactImage\":\"SortedCompletedTasks_contactImage__I0POj\",\"detailsTitle\":\"SortedCompletedTasks_detailsTitle__WzZ0n\",\"detailsSection\":\"SortedCompletedTasks_detailsSection__yjYF9\",\"detailsImageWrapper\":\"SortedCompletedTasks_detailsImageWrapper__WmOUk\",\"detailsImage\":\"SortedCompletedTasks_detailsImage__OpuBp\",\"detailsImageButton\":\"SortedCompletedTasks_detailsImageButton__JU0dd\",\"detailsImageInput\":\"SortedCompletedTasks_detailsImageInput__Cohik\",\"detailsSectionTitle\":\"SortedCompletedTasks_detailsSectionTitle__pmpFf\",\"detailsWrapper\":\"SortedCompletedTasks_detailsWrapper__yjCiP\",\"detailsItem\":\"SortedCompletedTasks_detailsItem__cGEhF\",\"detailsCover\":\"SortedCompletedTasks_detailsCover__84U5y\",\"detailsInfo\":\"SortedCompletedTasks_detailsInfo__1894o\",\"details\":\"SortedCompletedTasks_details__7ssqe\",\"detailsVal\":\"SortedCompletedTasks_detailsVal__zsUEv\",\"detailsDetailsVal\":\"SortedCompletedTasks_detailsDetailsVal__2OV3k\",\"detailsValPhone\":\"SortedCompletedTasks_detailsValPhone__wz3vy\",\"detailsValInput\":\"SortedCompletedTasks_detailsValInput__Fi0iS\",\"detailsDetailsValInput\":\"SortedCompletedTasks_detailsDetailsValInput__ggUq6\",\"detailsValInputPhone\":\"SortedCompletedTasks_detailsValInputPhone__NYQha\",\"backDrop\":\"SortedCompletedTasks_backDrop__Pvv+L\",\"loader\":\"SortedCompletedTasks_loader__7XXH7\",\"detailButton\":\"SortedCompletedTasks_detailButton__7I7pA\",\"buttonWrapper\":\"SortedCompletedTasks_buttonWrapper__Tkrr8\",\"detailsEditClose\":\"SortedCompletedTasks_detailsEditClose__2oCEp\",\"backdrop\":\"SortedCompletedTasks_backdrop__21qKB\",\"backdropIsHidden\":\"SortedCompletedTasks_backdropIsHidden__L9E3H\",\"modalWindow\":\"SortedCompletedTasks_modalWindow__Mw1fX\"};","var _defs;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgIcons(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-arrow\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12.586 27.414l-10-10c-0.781-0.781-0.781-2.047 0-2.828l10-10c0.781-0.781 2.047-0.781 2.828 0s0.781 2.047 0 2.828l-6.586 6.586h19.172c1.105 0 2 0.895 2 2s-0.895 2-2 2h-19.172l6.586 6.586c0.39 0.39 0.586 0.902 0.586 1.414s-0.195 1.024-0.586 1.414c-0.781 0.781-2.047 0.781-2.828 0z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-cross\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M31.708 25.708c0 0 0 0 0 0l-9.708-9.708 9.708-9.708c0 0 0 0 0 0 0.105-0.105 0.18-0.227 0.229-0.357 0.133-0.356 0.057-0.771-0.229-1.057l-4.586-4.586c-0.286-0.286-0.702-0.361-1.057-0.229-0.13 0.048-0.252 0.124-0.357 0.228 0 0 0 0 0 0l-9.708 9.708-9.708-9.708c0 0 0 0 0 0-0.105-0.104-0.227-0.18-0.357-0.228-0.356-0.133-0.771-0.057-1.057 0.229l-4.586 4.586c-0.286 0.286-0.361 0.702-0.229 1.057 0.049 0.13 0.124 0.252 0.229 0.357 0 0 0 0 0 0l9.708 9.708-9.708 9.708c0 0 0 0 0 0-0.104 0.105-0.18 0.227-0.229 0.357-0.133 0.355-0.057 0.771 0.229 1.057l4.586 4.586c0.286 0.286 0.702 0.361 1.057 0.229 0.13-0.049 0.252-0.124 0.357-0.229 0 0 0 0 0 0l9.708-9.708 9.708 9.708c0 0 0 0 0 0 0.105 0.105 0.227 0.18 0.357 0.229 0.356 0.133 0.771 0.057 1.057-0.229l4.586-4.586c0.286-0.286 0.362-0.702 0.229-1.057-0.049-0.13-0.124-0.252-0.229-0.357z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-enlarge\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32 0h-13l5 5-6 6 3 3 6-6 5 5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32 32v-13l-5 5-6-6-3 3 6 6-5 5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 32h13l-5-5 6-6-3-3-6 6-5-5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 0v13l5-5 6 6 3-3-6-6 5-5z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-enlarge2\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32 0v13l-5-5-6 6-3-3 6-6-5-5zM14 21l-6 6 5 5h-13v-13l5 5 6-6z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-pause\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM16 29c-7.18 0-13-5.82-13-13s5.82-13 13-13 13 5.82 13 13-5.82 13-13 13zM10 10h4v12h-4zM18 10h4v12h-4z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-play2\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM16 29c-7.18 0-13-5.82-13-13s5.82-13 13-13 13 5.82 13 13-5.82 13-13 13zM12 9l12 7-12 7z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-play3\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6 4l20 12-20 12z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-tv\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M30.662 9.003c-2.775-0.399-5.731-0.688-8.815-0.851l5.153-5.153-2-2-7.017 7.017c-0.656-0.011-1.317-0.017-1.983-0.017v0l-8-8-2 2 6.069 6.069c-3.779 0.133-7.386 0.454-10.731 0.935-0.86 3.366-1.338 7.086-1.338 10.997s0.477 7.63 1.338 10.997c4.489 0.645 9.448 1.003 14.662 1.003s10.173-0.358 14.662-1.003c0.86-3.366 1.338-7.086 1.338-10.997s-0.477-7.63-1.338-10.997zM26.997 27.331c-3.367 0.43-7.086 0.669-10.997 0.669s-7.63-0.239-10.997-0.669c-0.645-2.244-1.003-4.724-1.003-7.331s0.358-5.087 1.003-7.331c3.366-0.43 7.086-0.669 10.997-0.669s7.63 0.239 10.996 0.669c0.645 2.244 1.004 4.724 1.004 7.331s-0.358 5.087-1.003 7.331z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-volume-decrease\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16 14h16v4h-16v-4z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13 30c-0.26 0-0.516-0.102-0.707-0.293l-7.707-7.707h-3.586c-0.552 0-1-0.448-1-1v-10c0-0.552 0.448-1 1-1h3.586l7.707-7.707c0.286-0.286 0.716-0.372 1.090-0.217s0.617 0.519 0.617 0.924v26c0 0.404-0.244 0.769-0.617 0.924-0.124 0.051-0.254 0.076-0.383 0.076z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-volume-increase\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32 18h-6v6h-4v-6h-6v-4h6v-6h4v6h6v4z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13 30c-0.26 0-0.516-0.102-0.707-0.293l-7.707-7.707h-3.586c-0.552 0-1-0.448-1-1v-10c0-0.552 0.448-1 1-1h3.586l7.707-7.707c0.286-0.286 0.716-0.372 1.090-0.217s0.617 0.519 0.617 0.924v26c0 0.404-0.244 0.769-0.617 0.924-0.124 0.051-0.254 0.076-0.383 0.076z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-books\",\n    viewBox: \"0 0 36 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7 4h-6c-0.55 0-1 0.45-1 1v22c0 0.55 0.45 1 1 1h6c0.55 0 1-0.45 1-1v-22c0-0.55-0.45-1-1-1zM6 10h-4v-2h4v2z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17 4h-6c-0.55 0-1 0.45-1 1v22c0 0.55 0.45 1 1 1h6c0.55 0 1-0.45 1-1v-22c0-0.55-0.45-1-1-1zM16 10h-4v-2h4v2z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M23.909 5.546l-5.358 2.7c-0.491 0.247-0.691 0.852-0.443 1.343l8.999 17.861c0.247 0.491 0.852 0.691 1.343 0.443l5.358-2.7c0.491-0.247 0.691-0.852 0.443-1.343l-8.999-17.861c-0.247-0.491-0.852-0.691-1.343-0.443z\"\n  })))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIcons);\nexport default __webpack_public_path__ + \"static/media/icons.77c8d2ef0bd65aab65a1e4f05688514c.svg\";\nexport { ForwardRef as ReactComponent };","import { TasksCompletedList } from '../TasksCompletedList/TasksCompletedList';\nimport { Filter } from '../Filter/Filter';\nimport { useEffect } from 'react';\nimport {\n  fetchContacts,\n  closeSortedCompletedModal,\n  updateSortedCompletedContactAvatar,\n  updateSortedCompletedContactName,\n  updateSortedCompletedContactEmail,\n  updateSortedCompletedContactPhone,\n  closeCompletedMobileAndTabModal,\n} from '../../redux/AppRedux/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport clsx from 'clsx';\nimport {\n  selectError,\n  selectIsLoading,\n  selectOpenSortedCompletedModal,\n  selectedSortedCompletedContact,\n  selectedIsSlideLoading,\n  selectOpenCompletedMobileAndTabModal,\n} from '../../redux/AppRedux/selectors';\nimport css from './SortedCompletedTasks.module.css';\nimport svg from './icons.svg';\nimport { ThreeCircles } from 'react-loader-spinner';\nimport { useState } from 'react';\nimport Notiflix from 'notiflix';\nimport Flatpickr from 'react-flatpickr';\nimport 'flatpickr/dist/themes/material_blue.css';\nimport { Suspense } from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport { useRef } from 'react';\n\nexport const Contacts = () => {\n  const [inputKey, setInputKey] = useState(Date.now());\n  const sectionRef = useRef(null);\n   const [date, setDate] = useState(new Date());\n  const [isNameEditing, setNameEdit] = useState(false);\n  const [nameValue, setNameValue] = useState(\"\");\n  const [isEmailEditing, setEmailEdit] = useState(false);\n   const myContact = useSelector(selectedSortedCompletedContact);\n  const [emailValue, setEmailValue] = useState(myContact.email);\n   const [isPhoneEditing, setPhoneEdit] = useState(false);\n   const [dateValue, setDateValue] = useState('');\n  //const [idValue, setIdValue] = useState('');\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const isOpenCompletedMobileAndTabModal = useSelector(selectOpenCompletedMobileAndTabModal);\n  //const contacts = useSelector(selectContacts);\n  const isSlideLoading = useSelector(selectedIsSlideLoading);\n \n  const error = useSelector(selectError);\n  const isDesktop = useMediaQuery({ query: '(min-width: 1280px)' });\n  const isMobileOrTab = useMediaQuery({ query: '(max-width: 1279px)' });\n  const isOpenModal = useSelector(selectOpenSortedCompletedModal);\n  \n\n const handleModalClose = () => {\n   dispatch(closeSortedCompletedModal());\n   setNameEdit(false);\n   setEmailEdit(false);\n   dispatch(closeCompletedMobileAndTabModal());\n  };\n\n  const handleNameChange = evt => { \n      const wrd = evt.target.value;\n           let hasExceeded = false;\n           let nameRay;\n           if (wrd.length > 30) {\n             nameRay = [...wrd];\n             nameRay.pop();\n             evt.target.value = nameRay.join('');\n             setNameValue(evt.target.value);\n             hasExceeded = true;\n       }\n           else {\n             setNameValue(evt.target.value);\n       }\n           if (hasExceeded === true) {\n             Notiflix.Notify.warning('Maximum Charater limit is 30');\n           }\n  }\n\n  const handleNameEdit = evt => { \n    setNameEdit(true);\n    //const input = document.getElementById('nameInput');\n    evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n    setTimeout(() => {\n      evt.target.style.boxShadow = 'none';\n      const input = document.querySelector('[name=\"username\"]');\n      input.focus();\n    }, 100);\n  }\n\n  const handleNameSave = evt => {\n    \n     if (nameValue.trim() !== '') {\n       const idValue = evt.target.name;\n       dispatch( updateSortedCompletedContactName({ name: nameValue, myUpdateId: idValue }));\n       setNameEdit(false);\n     } else if (nameValue.trim() === '') {\n       Notiflix.Notify.warning('Input is required');\n     }\n     evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n     setTimeout(() => {\n       evt.target.style.boxShadow = 'none';\n     }, 500);\n  };\n  \n   const handleNameEditClose = () => {\n     setNameEdit(false);\n   };\n\n    const handleEmailChange = evt => {\n      setEmailValue(evt.target.value);\n      /*const id = evt.currentTarget.getAttribute('data-id');\n    setIdValue(id);*/\n      const wrd = evt.target.value;\n      let hasExceeded = false;\n      let nameRay;\n      if (wrd.length > 200) {\n        nameRay = [...wrd];\n        nameRay.pop();\n        evt.target.value = nameRay.join('');\n        hasExceeded = true;\n      }\n      if (hasExceeded === true) {\n        Notiflix.Notify.warning('Maximum Charater limit is 200');\n      }\n    };\n\n    const handleEmailEdit = evt => {\n      setEmailEdit(true);\n      evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n      setTimeout(() => {\n        evt.target.style.boxShadow = 'none';\n        const input = document.querySelector('[name=\"email\"]');\n        input.focus();\n      }, 100);\n  };\n\n   const handleEmailSave = evt => {\n     if (emailValue.trim() !== '') {\n       const idValue = evt.target.name;\n       dispatch(updateSortedCompletedContactEmail({ email: emailValue, myUpdateId: idValue }));\n       setEmailEdit(false);\n     } else if (emailValue.trim() === '') {\n       Notiflix.Notify.warning('Input is required');\n     }\n     evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n     setTimeout(() => {\n       evt.target.style.boxShadow = 'none';\n     }, 500);\n   };\n\n  const handleEmailEditClose = () => {\n    setEmailEdit(false);\n    setEmailValue(myContact.email);\n  }\n\n \n   const handlePhoneEdit = evt => {\n     setPhoneEdit(true);\n     evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n     setTimeout(() => {\n       evt.target.style.boxShadow = 'none';\n       const input = document.querySelector('[name=\"date\"]');\n       input.focus();\n     }, 100);\n   };\n  \n  const handlePhoneSave = evt => {\n    /*if (phoneValue.trim() !== '') {*/\n    const idValue = evt.target.name;\n    const exactDate = new Date();\n    if (date <= exactDate) {\n      Notiflix.Notify.failure('Invalid date, choose a date in the future');\n    }\n    else{\n      dispatch(updateSortedCompletedContactPhone({ dueDate: date, myUpdateId: idValue }));\n    }\n      setPhoneEdit(false);\n    \n    /*} else if (phoneValue.trim() === '') {\n      Notiflix.Notify.warning('Input is Empty or Incorrect');\n    }*/\n    evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n    setTimeout(() => {\n      evt.target.style.boxShadow = 'none';\n    }, 500);\n  };\n \n  const handlePhoneEditClose = () => {\n    setPhoneEdit(false);\n  };\n  \n   const handleImageChange = e => {\n     const file = e.target.files[0];\n     const id = e.currentTarget.getAttribute('data-id');\n     //dispatch(updateAvatar({ avatar: file }));\n     //console.log({ avatar: file });\n     if (file) {\n       dispatch(updateSortedCompletedContactAvatar({ myFile: file, myId: id })); // Store the file under the key \"avatar\"\n     }\n     setInputKey(Date.now());\n   };\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  useEffect(() => {\n    setEmailValue(myContact.email);\n  }, [myContact.email]);\n\n   useEffect(() => {\n     setNameValue(myContact.name);\n   }, [myContact.name]);\n  \n     useEffect(() => {\n       //setPhoneValue(myContact.phone);\n       /*const date = new Date(myContact.phone);\n\n       const formattedDate = date.toLocaleDateString('en-GB', {\n         year: 'numeric',\n         month: '2-digit',\n         day: '2-digit',\n       });\n       setDateValue(formattedDate)*/\n\n       const userLocale = navigator.language; // e.g., \"en-US\" or \"fr-FR\"\n       const myDate = new Date(myContact.dueDate);\n\n      const formatter = new Intl.DateTimeFormat(userLocale, {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit', // Optional: include seconds\n        hour12: true, // Optional: use 12-hour clock (set to false for 24-hour clock)\n      });\n       setDateValue(formatter.format(myDate));\n        \n     }, [myContact.dueDate]);\n  \n   useEffect(() => {\n     if (isOpenModal === true) {\n       const scrollTimer = setTimeout(() => {\n         sectionRef.current?.scrollIntoView({ behavior: 'smooth' });\n       }, 1000); // 1250ms delay\n\n       return () => clearTimeout(scrollTimer); // Cleanup on unmount\n     }\n   }, [isOpenModal]);\n\n  //console.log(myVal);\n\n  return (\n    <div\n      className={clsx(css.coverWrapper, {\n        [css.contactsWrapperSpace]: isOpenModal && isDesktop,\n      })}\n    >\n      {isMobileOrTab && (\n        <div\n          className={clsx(css.backdrop, {\n            [css.backdropIsHidden]: isOpenCompletedMobileAndTabModal,\n          })}\n        >\n          <div className={css.modalWindow}>\n            {isSlideLoading && (\n              <div className={css.backDrop}>\n                <ThreeCircles\n                  visible={true}\n                  height=\"80\"\n                  width=\"80\"\n                  color=\"#9225ff\"\n                  radius=\"9\"\n                  ariaLabel=\"three-dots-loading\"\n                  wrapperStyle={{}}\n                  wrapperClass={css.loader}\n                />\n              </div>\n            )}\n            <button className={css.closeModal} onClick={handleModalClose}>\n              <svg width=\"10px\" height=\"10px\" className={css.modalIcon}>\n                <use href={`${svg}#icon-cross`}></use>\n              </svg>\n            </button>\n            <p className={css.detailsTitle}>CUSTOMER DETAILS</p>\n            <div className={css.detailsImageWrapper}>\n              <img\n                className={css.detailsImage}\n                src={`${myContact.avatarURL}`}\n                alt=\"Contact\"\n              />\n            </div>\n            <input\n              className={css.detailsImageButton}\n              type=\"file\"\n              accept=\"image/*\"\n              name=\"avatar\"\n              key={inputKey}\n              onChange={handleImageChange}\n              id=\"completedMobileTab\"\n              data-id={myContact._id}\n            />\n            <label\n              className={css.detailsImageInput}\n              htmlFor=\"completedMobileTab\"\n            >\n              Update Customer Avatar +\n            </label>\n            <ul className={css.detailsWrapper}>\n              <li className={css.detailsItem}>\n                <span className={css.detailsCover}>\n                  <span className={css.detailsInfo}>\n                    <span className={css.details}>Name:</span>{' '}\n                    {isNameEditing === false ? (\n                      <span className={css.detailsVal}>\n                        <i className={css.detail}>{myContact.name}</i>\n                      </span>\n                    ) : (\n                      <input\n                        type=\"text\"\n                        className={css.detailsValInput}\n                        required\n                        onChange={handleNameChange}\n                        data-id={myContact._id}\n                        name=\"username\"\n                        defaultValue={myContact.name}\n                      />\n                    )}\n                  </span>\n                  <span className={css.buttonWrapper}>\n                    {isNameEditing === true && (\n                      <button\n                        className={css.detailsEditClose}\n                        onClick={handleNameEditClose}\n                      >\n                        <svg width=\"5px\" height=\"5px\" className={css.modalIcon}>\n                          <use href={`${svg}#icon-cross`}></use>\n                        </svg>\n                      </button>\n                    )}\n                    {isNameEditing === false ? (\n                      <button\n                        className={css.detailButton}\n                        onClick={handleNameEdit}\n                      >\n                        Edit\n                      </button>\n                    ) : (\n                      <button\n                        name={myContact._id}\n                        className={css.detailButton}\n                        onClick={handleNameSave}\n                      >\n                        Save\n                      </button>\n                    )}\n                  </span>\n                </span>\n              </li>\n              <li className={css.detailsItem}>\n                <span className={css.detailsCover}>\n                  <span className={css.detailsInfo}>\n                    <span className={css.details}>Email:</span>{' '}\n                    {isEmailEditing === false ? (\n                      <pre className={css.detailsDetailsVal}>\n                        <i className={css.detail}>{myContact.email}</i>\n                        {console.log(myContact.email)}\n                      </pre>\n                    ) : (\n                      <input\n                        type=\"text\"\n                        className={css.detailsDetailsValInput}\n                        required\n                        onChange={handleEmailChange}\n                        data-id={myContact._id}\n                        name=\"email\"\n                        title=\"Enter the details of your task\"\n                        defaultValue={myContact.email}\n                      />\n                    )}\n                  </span>\n                  <span className={css.buttonWrapper}>\n                    {isEmailEditing === true && (\n                      <button\n                        className={css.detailsEditClose}\n                        onClick={handleEmailEditClose}\n                      >\n                        <svg width=\"5px\" height=\"5px\" className={css.modalIcon}>\n                          <use href={`${svg}#icon-cross`}></use>\n                        </svg>\n                      </button>\n                    )}\n                    {isEmailEditing === false ? (\n                      <button\n                        className={css.detailButton}\n                        onClick={handleEmailEdit}\n                      >\n                        Edit\n                      </button>\n                    ) : (\n                      <button\n                        name={myContact._id}\n                        className={css.detailButton}\n                        onClick={handleEmailSave}\n                      >\n                        Save\n                      </button>\n                    )}\n                  </span>\n                </span>\n              </li>\n              <li className={css.detailsItem}>\n                <span className={css.detailsCover}>\n                  <span className={css.detailsInfo}>\n                    <span className={css.details}>Due Date:</span>{' '}\n                    {isPhoneEditing === false ? (\n                      <span className={css.detailsValPhone}>\n                        <i className={css.detail}>{dateValue}</i>\n                      </span>\n                    ) : (\n                      <Flatpickr\n                        data-enable-time\n                        value={date}\n                        onChange={selectedDates => {\n                          const nowDate = new Date();\n                          if (selectedDates[0] <= nowDate) {\n                            Notiflix.Notify.warning(\n                              'Choose a date in the future'\n                            );\n                          } else {\n                            Notiflix.Notify.success('Due Date Selected');\n                          }\n                          setDate(selectedDates[0]);\n                        }}\n                        options={{\n                          minuteIncrement: 1, // Set minute increments to 1\n                        }}\n                        render={({ defaultValue, ...props }, ref) => (\n                          <input\n                            {...props}\n                            ref={ref}\n                            className={css.detailsValInputPhone}\n                            required\n                            data-id={myContact._id}\n                            name=\"date\"\n                          />\n                        )}\n                      />\n                    )}\n                  </span>\n                  <span className={css.buttonWrapper}>\n                    {isPhoneEditing === true && (\n                      <button\n                        className={css.detailsEditClose}\n                        onClick={handlePhoneEditClose}\n                      >\n                        <svg width=\"5px\" height=\"5px\" className={css.modalIcon}>\n                          <use href={`${svg}#icon-cross`}></use>\n                        </svg>\n                      </button>\n                    )}\n                    {isPhoneEditing === false ? (\n                      <button\n                        className={css.detailButton}\n                        onClick={handlePhoneEdit}\n                      >\n                        Edit\n                      </button>\n                    ) : (\n                      <button\n                        name={myContact._id}\n                        className={css.detailButton}\n                        onClick={handlePhoneSave}\n                      >\n                        Save\n                      </button>\n                    )}\n                  </span>\n                </span>\n              </li>\n            </ul>\n          </div>\n        </div>\n      )}\n      <b\n        className={clsx(css.notification, {\n          [css.notificationShow]: isLoading && !error,\n        })}\n      >\n        Please wait...\n      </b>\n\n      {error && (\n        <b className={css.notificationShow}>\n          There was an error, logout and login again!!!\n        </b>\n      )}\n      <div\n        ref={sectionRef}\n        className={clsx(css.contactsDetailsHide, {\n          [css.contactsDetailsShow]: isOpenModal && isDesktop,\n        })}\n      >\n        {isSlideLoading && (\n          <div className={css.backDrop}>\n            <ThreeCircles\n              visible={true}\n              height=\"80\"\n              width=\"80\"\n              color=\"#9225ff\"\n              radius=\"9\"\n              ariaLabel=\"three-dots-loading\"\n              wrapperStyle={{}}\n              wrapperClass={css.loader}\n            />\n          </div>\n        )}\n        <button className={css.closeModal} onClick={handleModalClose}>\n          <svg width=\"10px\" height=\"10px\" className={css.modalIcon}>\n            <use href={`${svg}#icon-cross`}></use>\n          </svg>\n        </button>\n        <p className={css.detailsTitle}>CUSTOMER DETAILS</p>\n        <div className={css.detailsImageWrapper}>\n          <img\n            className={css.detailsImage}\n            src={myContact.avatarURL}\n            alt=\"Contact\"\n          />\n        </div>\n        <input\n          className={css.detailsImageButton}\n          type=\"file\"\n          accept=\"image/*\"\n          name=\"avatar\"\n          key={inputKey}\n          onChange={handleImageChange}\n          id=\"completedDesktop\"\n          data-id={myContact._id}\n        />\n        <label className={css.detailsImageInput} htmlFor=\"completedDesktop\">\n          Update Customer Avatar +\n        </label>\n        <ul className={css.detailsWrapper}>\n          <li className={css.detailsItem}>\n            <span className={css.detailsCover}>\n              <span className={css.detailsInfo}>\n                <span className={css.details}>Name:</span>{' '}\n                {isNameEditing === false ? (\n                  <span className={css.detailsVal}>\n                    <i className={css.detail}>{myContact.name}</i>\n                  </span>\n                ) : (\n                  <input\n                    type=\"text\"\n                    className={css.detailsValInput}\n                    required\n                    onChange={handleNameChange}\n                    data-id={myContact._id}\n                    name=\"username\"\n                    defaultValue={myContact.name}\n                  />\n                )}\n              </span>\n              <span className={css.buttonWrapper}>\n                {isNameEditing === true && (\n                  <button\n                    className={css.detailsEditClose}\n                    onClick={handleNameEditClose}\n                  >\n                    <svg width=\"5px\" height=\"5px\" className={css.modalIcon}>\n                      <use href={`${svg}#icon-cross`}></use>\n                    </svg>\n                  </button>\n                )}\n                {isNameEditing === false ? (\n                  <button className={css.detailButton} onClick={handleNameEdit}>\n                    Edit\n                  </button>\n                ) : (\n                  <button\n                    name={myContact._id}\n                    className={css.detailButton}\n                    onClick={handleNameSave}\n                  >\n                    Save\n                  </button>\n                )}\n              </span>\n            </span>\n          </li>\n          <li className={css.detailsItem}>\n            <span className={css.detailsCover}>\n              <span className={css.detailsInfo}>\n                <span className={css.details}>Email:</span>{' '}\n                {isEmailEditing === false ? (\n                  <pre className={css.detailsDetailsVal}>\n                    <i className={css.detail}>{myContact.email}</i>\n                  </pre>\n                ) : (\n                  <input\n                    type=\"text\"\n                    className={css.detailsDetailsValInput}\n                    required\n                    onChange={handleEmailChange}\n                    data-id={myContact._id}\n                    name=\"email\"\n                    title=\"Enter the details of your task\"\n                    defaultValue={myContact.email}\n                  />\n                )}\n              </span>\n              <span className={css.buttonWrapper}>\n                {isEmailEditing === true && (\n                  <button\n                    className={css.detailsEditClose}\n                    onClick={handleEmailEditClose}\n                  >\n                    <svg width=\"5px\" height=\"5px\" className={css.modalIcon}>\n                      <use href={`${svg}#icon-cross`}></use>\n                    </svg>\n                  </button>\n                )}\n                {isEmailEditing === false ? (\n                  <button\n                    className={css.detailButton}\n                    onClick={handleEmailEdit}\n                  >\n                    Edit\n                  </button>\n                ) : (\n                  <button\n                    name={myContact._id}\n                    className={css.detailButton}\n                    onClick={handleEmailSave}\n                  >\n                    Save\n                  </button>\n                )}\n              </span>\n            </span>\n          </li>\n          <li className={css.detailsItem}>\n            <span className={css.detailsCover}>\n              <span className={css.detailsInfo}>\n                <span className={css.details}>Due Date:</span>{' '}\n                {isPhoneEditing === false ? (\n                  <span className={css.detailsValPhone}>\n                    <i className={css.detail}>{dateValue}</i>\n                  </span>\n                ) : (\n                  <Flatpickr\n                    data-enable-time\n                    value={date}\n                    onChange={selectedDates => {\n                      const nowDate = new Date();\n                      if (selectedDates[0] <= nowDate) {\n                        Notiflix.Notify.warning('Choose a date in the future');\n                      } else {\n                        Notiflix.Notify.success('Due Date Selected');\n                      }\n                      setDate(selectedDates[0]);\n                    }}\n                    options={{\n                      minuteIncrement: 1, // Set minute increments to 1\n                    }}\n                    render={({ defaultValue, ...props }, ref) => (\n                      <input\n                        {...props}\n                        ref={ref}\n                        className={css.detailsValInputPhone}\n                        required\n                        data-id={myContact._id}\n                        name=\"date\"\n                      />\n                    )}\n                  />\n                )}\n              </span>\n              <span className={css.buttonWrapper}>\n                {isPhoneEditing === true && (\n                  <button\n                    className={css.detailsEditClose}\n                    onClick={handlePhoneEditClose}\n                  >\n                    <svg width=\"5px\" height=\"5px\" className={css.modalIcon}>\n                      <use href={`${svg}#icon-cross`}></use>\n                    </svg>\n                  </button>\n                )}\n                {isPhoneEditing === false ? (\n                  <button\n                    className={css.detailButton}\n                    onClick={handlePhoneEdit}\n                  >\n                    Edit\n                  </button>\n                ) : (\n                  <button\n                    name={myContact._id}\n                    className={css.detailButton}\n                    onClick={handlePhoneSave}\n                  >\n                    Save\n                  </button>\n                )}\n              </span>\n            </span>\n          </li>\n        </ul>\n      </div>\n      <div\n        className={clsx(css.sortedWrapper, {\n          [css.selected]: isOpenModal && isDesktop,\n        })}\n      >\n        <TasksCompletedList />\n      </div>\n    </div>\n  );\n};\n\nexport default Contacts;\n","export const selectContacts = state => state.contacts.contacts.items;\n\nexport const selectContactsFilter = state => state.filter;\n\nexport const selectIsLoading = state => state.contacts.contacts.isLoading;\n\nexport const selectIsKeyLoading = state => state.contacts.contacts.isKeyLoading;\n\nexport const selectError = state => state.contacts.contacts.error;\n\nexport const selectOpenModal = state => state.contacts.contacts.openMyModal;\n\nexport const selectOpenSortedAllModal = state => state.contacts.contacts.openMyAllModal;\n\nexport const selectOpenSortedPendingModal = state => state.contacts.contacts.openMyPendingModal;\n\nexport const selectOpenSortedCompletedModal = state => state.contacts.contacts.openMyCompletedModal;\n\nexport const selectOpenSortedPastDueModal = state => state.contacts.contacts.openMyPastDueModal;\n\nexport const selectedContact = state => state.contacts.contacts.selectedContact;\n\nexport const selectedSortedAllContact = state => state.contacts.contacts.selectedSortedAllContact;\n\nexport const selectedSortedPendingContact = state => state.contacts.contacts.selectedSortedPendingContact;\n\nexport const selectedSortedCompletedContact = state => state.contacts.contacts.selectedSortedCompletedContact;\n\nexport const selectedSortedPastDueContact = state => state.contacts.contacts.selectedSortedPastDueContact;\n\nexport const selectedIsSlideLoading = state => state.contacts.contacts.isSlideLoading;\n\nexport const selectedIsSlideError = state => state.contacts.contacts.isSlideError;\n\nexport const selectFilterUp = state => state.contacts.contacts.filterUpLimit;\n\nexport const selectFilterDown = state => state.contacts.contacts.filterDownLimit;\n\nexport const selectCustomerName = state => state.contacts.contacts.customerName;\n\nexport const selectOpenMobileAndTabModal = state => state.contacts.contacts.openMyMobileAndTabModal;\n\nexport const selectOpenAllMobileAndTabModal = state => state.contacts.contacts.openMyAllMobileAndTabModal;\n\nexport const selectOpenPendingMobileAndTabModal = state => state.contacts.contacts.openMyPendingMobileAndTabModal;\n\nexport const selectOpenCompletedMobileAndTabModal = state => state.contacts.contacts.openMyCompletedMobileAndTabModal;\n\nexport const selectOpenPastDueMobileAndTabModal = state => state.contacts.contacts.openMyPastDueMobileAndTabModal;\n","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n"],"names":["Filter","searchTermId","nanoid","contacts","useSelector","selectContacts","filterUpper","selectFilterUp","filterLower","selectFilterDown","filterValue","selectContactsFilter","dispatch","useDispatch","bestMatches","filter","contact","name","toLowerCase","includes","trim","handleModalOpen","evt","target","getAttribute","id","currentTarget","fetchContactById","openModal","openMobileAndTabModal","handleDelete","style","boxShadow","setTimeout","deleteContact","handleChange","updateStatus","status","checked","myUpdateStatusId","_jsxs","className","css","children","htmlFor","_jsx","type","placeholder","pattern","title","required","onChange","event","setFilter","value","console","log","autoComplete","length","map","myindex","indexOf","_id","onClick","TasksCompletedList","_ref","filterDown","isLoading","selectIsLoading","error","selectError","fetchSortedCompletedContactById","openSortedCompletedModal","openCompletedMobileAndTabModal","_useState","useState","_useState2","_slicedToArray","lowerLimit","setLowerLimit","_useState3","_useState4","upperLimit","setUpperLimit","handleBackward","completedMatches","Contacts","Date","now","inputKey","setInputKey","sectionRef","useRef","date","setDate","_useState5","_useState6","isNameEditing","setNameEdit","_useState7","_useState8","nameValue","setNameValue","_useState9","_useState10","isEmailEditing","setEmailEdit","myContact","selectedSortedCompletedContact","_useState11","email","_useState12","emailValue","setEmailValue","_useState13","_useState14","isPhoneEditing","setPhoneEdit","_useState15","_useState16","dateValue","setDateValue","isOpenCompletedMobileAndTabModal","selectOpenCompletedMobileAndTabModal","isSlideLoading","selectedIsSlideLoading","isDesktop","useMediaQuery","query","isMobileOrTab","isOpenModal","selectOpenSortedCompletedModal","handleModalClose","closeSortedCompletedModal","closeCompletedMobileAndTabModal","handleNameChange","nameRay","wrd","hasExceeded","_toConsumableArray","pop","join","Notiflix","handleNameEdit","document","querySelector","focus","handleNameSave","idValue","updateSortedCompletedContactName","myUpdateId","handleNameEditClose","handleEmailChange","handleEmailEdit","handleEmailSave","updateSortedCompletedContactEmail","handleEmailEditClose","handlePhoneEdit","handlePhoneSave","exactDate","updateSortedCompletedContactPhone","dueDate","handlePhoneEditClose","handleImageChange","e","file","files","updateSortedCompletedContactAvatar","myFile","myId","useEffect","fetchContacts","userLocale","navigator","language","myDate","formatter","Intl","DateTimeFormat","year","month","day","hour","minute","second","hour12","format","scrollTimer","_sectionRef$current","current","scrollIntoView","behavior","clearTimeout","clsx","_defineProperty","ThreeCircles","visible","height","width","color","radius","ariaLabel","wrapperStyle","wrapperClass","href","concat","svg","src","avatarURL","alt","accept","defaultValue","Flatpickr","selectedDates","nowDate","options","minuteIncrement","render","ref","props","_objectWithoutProperties","_excluded","_objectSpread","_ref2","_excluded2","state","items","selectOpenModal","openMyModal","selectOpenSortedAllModal","openMyAllModal","selectOpenSortedPendingModal","openMyPendingModal","openMyCompletedModal","selectOpenSortedPastDueModal","openMyPastDueModal","selectedContact","selectedSortedAllContact","selectedSortedPendingContact","selectedSortedPastDueContact","filterUpLimit","filterDownLimit","selectCustomerName","customerName","selectOpenMobileAndTabModal","openMyMobileAndTabModal","selectOpenAllMobileAndTabModal","openMyAllMobileAndTabModal","selectOpenPendingMobileAndTabModal","openMyPendingMobileAndTabModal","openMyCompletedMobileAndTabModal","selectOpenPastDueMobileAndTabModal","openMyPastDueMobileAndTabModal","size","arguments","undefined","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}