{"version":3,"file":"static/js/208.7045ef8d.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://react-homework-template/./src/components/TasksAllList/TasksAllList.module.css?fbf6","components/TasksAllList/TasksAllList.jsx","components/SortedAllTasks/icons.svg","components/SortedAllTasks/SortedAllTasks.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"backDrop\":\"Loader_backDrop__h+Bln\",\"loader\":\"Loader_loader__+lRPl\"};","import { useSelector } from 'react-redux';\nimport { ThreeCircles } from 'react-loader-spinner';\nimport css from './Loader.module.css';\nimport { selectIsCatPicsLoading } from '../../redux/AppRedux/selectors';\n\nexport const Loader = () => {\n  const isCatPicsLoading = useSelector(selectIsCatPicsLoading);\n\n  return (\n    <>\n      {isCatPicsLoading && (\n        <div className={css.backDrop}>\n          <ThreeCircles\n            visible={true}\n            height=\"60\"\n            width=\"60\"\n            color=\"#9225ff\"\n            radius=\"9\"\n            ariaLabel=\"three-dots-loading\"\n            wrapperStyle={{}}\n            wrapperClass={css.loader}\n          />\n        </div>\n      )}\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsSection\":\"TasksAllList_contactsSection__SLU5x\",\"contactsTitle\":\"TasksAllList_contactsTitle__Df6LH\",\"contactsList\":\"TasksAllList_contactsList__nLH7q\",\"contactsListAlt\":\"TasksAllList_contactsListAlt__cTlyT\",\"contactsData\":\"TasksAllList_contactsData__GlBzz\",\"contactsPhone\":\"TasksAllList_contactsPhone__Zk3IP\",\"contactsItemWrapper\":\"TasksAllList_contactsItemWrapper__NfNnm\",\"contactsItem\":\"TasksAllList_contactsItem__H+Hvg\",\"contactsDetails\":\"TasksAllList_contactsDetails__mCdwK\",\"contactsName\":\"TasksAllList_contactsName__aJ5XR\",\"checkbox\":\"TasksAllList_checkbox__BGmks\",\"contactsButtonArea\":\"TasksAllList_contactsButtonArea__QeU-g\",\"contactsButton\":\"TasksAllList_contactsButton__CKE1T\",\"navigationArea\":\"TasksAllList_navigationArea__-III2\",\"navigationButton\":\"TasksAllList_navigationButton__8UbqN\",\"catImage\":\"TasksAllList_catImage__2H7Nf\",\"catGalleryCover\":\"TasksAllList_catGalleryCover__LLEub\",\"catGallery\":\"TasksAllList_catGallery__HmpwA\",\"catItem\":\"TasksAllList_catItem__-Mf6P\"};","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { useState, useEffect } from 'react';\nimport {\n  selectError,\n  selectIsLoading,\n  selectCatPics,\n} from '../../redux/AppRedux/selectors';\nimport {fetchCatPics} from '../../redux/AppRedux/operations';\nimport css from './TasksAllList.module.css';\nimport { Loader } from '../Loader/Loader';\n\nexport const TasksAllList = ({ children }) => {\n\n  const isLoading = useSelector(selectIsLoading);\n  const catPics = useSelector(selectCatPics);\n  const error = useSelector(selectError);\n  \n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const lightbox = new SimpleLightbox('.gallery a', {\n      captionsData: 'alt',\n      captionDelay: 250,\n      closeText: 'X',\n      animationSlide: false,\n    });\n\n    // Cleanup function\n    return () => {\n      lightbox.destroy();\n    };\n  }, [catPics]);\n\n  return (\n    <div className={css.contactsSection}>\n      <h3 className={css.contactsTitle}>Cat Pics</h3>\n      {children}\n\n      <div\n        className={css.catGalleryCover}\n        style={{\n          position: 'relative',\n        }}\n      >\n        <Loader />\n        <ul\n          className={`${css.catGallery} gallery`}\n          style={{\n            height: `\n    ${catPics.length === 0 ? '600px' : 'auto'}\n  `,}}>\n          {catPics.map(pic => (\n            <li key={pic.id} className={css.catItem} data-id={pic.id}>\n              <a href={pic.url}>\n                <img className={css.catImage} src={pic.url} alt=\"\" />\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","var _defs;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgIcons(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-arrow\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12.586 27.414l-10-10c-0.781-0.781-0.781-2.047 0-2.828l10-10c0.781-0.781 2.047-0.781 2.828 0s0.781 2.047 0 2.828l-6.586 6.586h19.172c1.105 0 2 0.895 2 2s-0.895 2-2 2h-19.172l6.586 6.586c0.39 0.39 0.586 0.902 0.586 1.414s-0.195 1.024-0.586 1.414c-0.781 0.781-2.047 0.781-2.828 0z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-cross\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M31.708 25.708c0 0 0 0 0 0l-9.708-9.708 9.708-9.708c0 0 0 0 0 0 0.105-0.105 0.18-0.227 0.229-0.357 0.133-0.356 0.057-0.771-0.229-1.057l-4.586-4.586c-0.286-0.286-0.702-0.361-1.057-0.229-0.13 0.048-0.252 0.124-0.357 0.228 0 0 0 0 0 0l-9.708 9.708-9.708-9.708c0 0 0 0 0 0-0.105-0.104-0.227-0.18-0.357-0.228-0.356-0.133-0.771-0.057-1.057 0.229l-4.586 4.586c-0.286 0.286-0.361 0.702-0.229 1.057 0.049 0.13 0.124 0.252 0.229 0.357 0 0 0 0 0 0l9.708 9.708-9.708 9.708c0 0 0 0 0 0-0.104 0.105-0.18 0.227-0.229 0.357-0.133 0.355-0.057 0.771 0.229 1.057l4.586 4.586c0.286 0.286 0.702 0.361 1.057 0.229 0.13-0.049 0.252-0.124 0.357-0.229 0 0 0 0 0 0l9.708-9.708 9.708 9.708c0 0 0 0 0 0 0.105 0.105 0.227 0.18 0.357 0.229 0.356 0.133 0.771 0.057 1.057-0.229l4.586-4.586c0.286-0.286 0.362-0.702 0.229-1.057-0.049-0.13-0.124-0.252-0.229-0.357z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-enlarge\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32 0h-13l5 5-6 6 3 3 6-6 5 5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32 32v-13l-5 5-6-6-3 3 6 6-5 5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 32h13l-5-5 6-6-3-3-6 6-5-5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 0v13l5-5 6 6 3-3-6-6 5-5z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-enlarge2\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32 0v13l-5-5-6 6-3-3 6-6-5-5zM14 21l-6 6 5 5h-13v-13l5 5 6-6z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-pause\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM16 29c-7.18 0-13-5.82-13-13s5.82-13 13-13 13 5.82 13 13-5.82 13-13 13zM10 10h4v12h-4zM18 10h4v12h-4z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-play2\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM16 29c-7.18 0-13-5.82-13-13s5.82-13 13-13 13 5.82 13 13-5.82 13-13 13zM12 9l12 7-12 7z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-play3\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6 4l20 12-20 12z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-tv\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M30.662 9.003c-2.775-0.399-5.731-0.688-8.815-0.851l5.153-5.153-2-2-7.017 7.017c-0.656-0.011-1.317-0.017-1.983-0.017v0l-8-8-2 2 6.069 6.069c-3.779 0.133-7.386 0.454-10.731 0.935-0.86 3.366-1.338 7.086-1.338 10.997s0.477 7.63 1.338 10.997c4.489 0.645 9.448 1.003 14.662 1.003s10.173-0.358 14.662-1.003c0.86-3.366 1.338-7.086 1.338-10.997s-0.477-7.63-1.338-10.997zM26.997 27.331c-3.367 0.43-7.086 0.669-10.997 0.669s-7.63-0.239-10.997-0.669c-0.645-2.244-1.003-4.724-1.003-7.331s0.358-5.087 1.003-7.331c3.366-0.43 7.086-0.669 10.997-0.669s7.63 0.239 10.996 0.669c0.645 2.244 1.004 4.724 1.004 7.331s-0.358 5.087-1.003 7.331z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-volume-decrease\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16 14h16v4h-16v-4z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13 30c-0.26 0-0.516-0.102-0.707-0.293l-7.707-7.707h-3.586c-0.552 0-1-0.448-1-1v-10c0-0.552 0.448-1 1-1h3.586l7.707-7.707c0.286-0.286 0.716-0.372 1.090-0.217s0.617 0.519 0.617 0.924v26c0 0.404-0.244 0.769-0.617 0.924-0.124 0.051-0.254 0.076-0.383 0.076z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-volume-increase\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32 18h-6v6h-4v-6h-6v-4h6v-6h4v6h6v4z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13 30c-0.26 0-0.516-0.102-0.707-0.293l-7.707-7.707h-3.586c-0.552 0-1-0.448-1-1v-10c0-0.552 0.448-1 1-1h3.586l7.707-7.707c0.286-0.286 0.716-0.372 1.090-0.217s0.617 0.519 0.617 0.924v26c0 0.404-0.244 0.769-0.617 0.924-0.124 0.051-0.254 0.076-0.383 0.076z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-books\",\n    viewBox: \"0 0 36 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7 4h-6c-0.55 0-1 0.45-1 1v22c0 0.55 0.45 1 1 1h6c0.55 0 1-0.45 1-1v-22c0-0.55-0.45-1-1-1zM6 10h-4v-2h4v2z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17 4h-6c-0.55 0-1 0.45-1 1v22c0 0.55 0.45 1 1 1h6c0.55 0 1-0.45 1-1v-22c0-0.55-0.45-1-1-1zM16 10h-4v-2h4v2z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M23.909 5.546l-5.358 2.7c-0.491 0.247-0.691 0.852-0.443 1.343l8.999 17.861c0.247 0.491 0.852 0.691 1.343 0.443l5.358-2.7c0.491-0.247 0.691-0.852 0.443-1.343l-8.999-17.861c-0.247-0.491-0.852-0.691-1.343-0.443z\"\n  })))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIcons);\nexport default __webpack_public_path__ + \"static/media/icons.77c8d2ef0bd65aab65a1e4f05688514c.svg\";\nexport { ForwardRef as ReactComponent };","import { TasksAllList } from '../TasksAllList/TasksAllList';\nimport { useEffect } from 'react';\nimport {\n  closeSortedAllModal,\n  updateSortedAllContactAvatar,\n  updateSortedAllContactName,\n  updateSortedAllContactEmail,\n  updateSortedAllContactPhone,\n  closeAllMobileAndTabModal,\n} from '../../redux/AppRedux/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport clsx from 'clsx';\nimport {\n  selectError,\n  selectIsLoading,\n  selectOpenSortedAllModal,\n  selectedSortedAllContact,\n  selectedIsSlideLoading,\n  selectOpenAllMobileAndTabModal,\n} from '../../redux/AppRedux/selectors';\nimport css from './SortedAllTasks.module.css';\nimport svg from './icons.svg';\nimport { ThreeCircles } from 'react-loader-spinner';\nimport { useState } from 'react';\nimport Notiflix from 'notiflix';\nimport Flatpickr from 'react-flatpickr';\nimport 'flatpickr/dist/themes/material_blue.css';\nimport { useMediaQuery } from 'react-responsive';\nimport { useRef } from 'react';\n\nexport const Contacts = () => {\n  const sectionRef = useRef(null);\n   const [date, setDate] = useState(new Date());\n  const [isNameEditing, setNameEdit] = useState(false);\n  const [nameValue, setNameValue] = useState(\"\");\n  const [isEmailEditing, setEmailEdit] = useState(false);\n  const [inputKey, setInputKey] = useState(Date.now());\n   const myContact = useSelector(selectedSortedAllContact);\n  const [emailValue, setEmailValue] = useState(myContact.email);\n   const [isPhoneEditing, setPhoneEdit] = useState(false);\n   const [dateValue, setDateValue] = useState('');\n\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const isOpenAllMobileAndTabModal = useSelector(selectOpenAllMobileAndTabModal);\n  \n  const isSlideLoading = useSelector(selectedIsSlideLoading);\n \n  const error = useSelector(selectError);\n  const isDesktop = useMediaQuery({ query: '(min-width: 1280px)' });\n  const isMobileOrTab = useMediaQuery({ query: '(max-width: 1279px)' });\n   const isOpenModal = useSelector(selectOpenSortedAllModal);\n const handleModalClose = () => {\n   dispatch(closeSortedAllModal());\n   setNameEdit(false);\n   setEmailEdit(false);\n   dispatch(closeAllMobileAndTabModal());\n  };\n\n  const handleNameChange = evt => { \n      \n         const wrd = evt.target.value;\n         let hasExceeded = false;\n         let nameRay;\n         if (wrd.length > 30) {\n           nameRay = [...wrd];\n           nameRay.pop();\n           evt.target.value = nameRay.join('');\n           setNameValue(evt.target.value);\n           hasExceeded = true;\n     }\n         else {\n           setNameValue(evt.target.value);\n     }\n         if (hasExceeded === true) {\n           Notiflix.Notify.warning('Maximum Charater limit is 30');\n         }\n     /*const id = evt.currentTarget.getAttribute('data-id');\n     setIdValue(id);*/\n   }\n\n  const handleNameEdit = evt => { \n    setNameEdit(true);\n    //const input = document.getElementById('nameInput');\n    evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n    setTimeout(() => {\n      evt.target.style.boxShadow = 'none';\n      const input = document.querySelector('[name=\"username\"]');\n      input.focus();\n    }, 100);\n  }\n\n  const handleNameSave = evt => {\n    \n     if (nameValue.trim() !== '') {\n       const idValue = evt.target.name;\n       dispatch(updateSortedAllContactName({ name: nameValue, myUpdateId: idValue }));\n       setNameEdit(false);\n     } else if (nameValue.trim() === '') {\n       Notiflix.Notify.warning('Input is required');\n     }\n     evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n     setTimeout(() => {\n       evt.target.style.boxShadow = 'none';\n     }, 500);\n  };\n  \n   const handleNameEditClose = () => {\n     setNameEdit(false);\n   };\n\n    const handleEmailChange = evt => {\n      setEmailValue(evt.target.value);\n      /*const id = evt.currentTarget.getAttribute('data-id');\n    setIdValue(id);*/\n      const wrd = evt.target.value;\n      let hasExceeded = false;\n      let nameRay;\n      if (wrd.length > 200) {\n        nameRay = [...wrd];\n        nameRay.pop();\n        evt.target.value = nameRay.join('');\n        hasExceeded = true;\n      }\n      if (hasExceeded === true) {\n        Notiflix.Notify.warning('Maximum Charater limit is 200');\n      }\n    };\n\n    const handleEmailEdit = evt => {\n      setEmailEdit(true);\n      evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n      setTimeout(() => {\n        evt.target.style.boxShadow = 'none';\n        const input = document.querySelector('[name=\"email\"]');\n        input.focus();\n      }, 100);\n  };\n\n   const handleEmailSave = evt => {\n     if (emailValue.trim() !== '') {\n       const idValue = evt.target.name;\n       dispatch(updateSortedAllContactEmail({ email: emailValue, myUpdateId: idValue }));\n       setEmailEdit(false);\n     } else if (emailValue.trim() === '') {\n       Notiflix.Notify.warning('Input is required');\n     }\n     evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n     setTimeout(() => {\n       evt.target.style.boxShadow = 'none';\n     }, 500);\n   };\n\n  const handleEmailEditClose = () => {\n    setEmailEdit(false);\n    setEmailValue(myContact.email);\n  }\n\n \n   const handlePhoneEdit = evt => {\n     setPhoneEdit(true);\n     evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n     setTimeout(() => {\n       evt.target.style.boxShadow = 'none';\n       const input = document.querySelector('[name=\"date\"]');\n       input.focus();\n     }, 100);\n   };\n  \n  const handlePhoneSave = evt => {\n    /*if (phoneValue.trim() !== '') {*/\n    const idValue = evt.target.name;\n    const exactDate = new Date();\n    if (date <= exactDate) {\n      Notiflix.Notify.failure('Invalid date, choose a date in the future');\n    }\n    else{\n      dispatch(updateSortedAllContactPhone({ dueDate: date, myUpdateId: idValue }));\n    }\n      setPhoneEdit(false);\n    \n    /*} else if (phoneValue.trim() === '') {\n      Notiflix.Notify.warning('Input is Empty or Incorrect');\n    }*/\n    evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n    setTimeout(() => {\n      evt.target.style.boxShadow = 'none';\n    }, 500);\n  };\n \n  const handlePhoneEditClose = () => {\n    setPhoneEdit(false);\n  };\n  \n   const handleImageChange = e => {\n     const file = e.target.files[0];\n     const id = e.currentTarget.getAttribute('data-id');\n     //dispatch(updateAvatar({ avatar: file }));\n     //console.log({ avatar: file });\n     if (file) {\n       dispatch(updateSortedAllContactAvatar({ myFile: file, myId: id })); // Store the file under the key \"avatar\"\n     }\n     \n     setInputKey(Date.now());\n   };\n\n  useEffect(() => {\n    setEmailValue(myContact.email);\n  }, [myContact.email]);\n\n   useEffect(() => {\n     setNameValue(myContact.name);\n   }, [myContact.name]);\n  \n     useEffect(() => {\n\n       const userLocale = navigator.language; // e.g., \"en-US\" or \"fr-FR\"\n       const myDate = new Date(myContact.dueDate);\n\n      const formatter = new Intl.DateTimeFormat(userLocale, {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit', // Optional: include seconds\n        hour12: true, // Optional: use 12-hour clock (set to false for 24-hour clock)\n      });\n       setDateValue(formatter.format(myDate));\n        \n     }, [myContact.dueDate]);\n  \n   useEffect(() => {\n     if (isOpenModal === true) {\n       const scrollTimer = setTimeout(() => {\n         sectionRef.current?.scrollIntoView({ behavior: 'smooth' });\n       }, 1000); // 1250ms delay\n\n       return () => clearTimeout(scrollTimer); // Cleanup on unmount\n     }\n   }, [isOpenModal]);\n\n  //console.log(myVal);\n\n  return (\n    <div\n      className={clsx(css.coverWrapper, {\n        [css.contactsWrapperSpace]: isOpenModal && isDesktop,\n      })}\n    >\n      {isMobileOrTab && (\n        <div\n          className={clsx(css.backdrop, {\n            [css.backdropIsHidden]: isOpenAllMobileAndTabModal,\n          })}\n        >\n          <div className={css.modalWindow}>\n            {isSlideLoading && (\n              <div className={css.backDrop}>\n                <ThreeCircles\n                  visible={true}\n                  height=\"80\"\n                  width=\"80\"\n                  color=\"#9225ff\"\n                  radius=\"9\"\n                  ariaLabel=\"three-dots-loading\"\n                  wrapperStyle={{}}\n                  wrapperClass={css.loader}\n                />\n              </div>\n            )}\n            <button className={css.closeModal} onClick={handleModalClose}>\n              <svg width=\"10px\" height=\"10px\" className={css.modalIcon}>\n                <use href={`${svg}#icon-cross`}></use>\n              </svg>\n            </button>\n            <p className={css.detailsTitle}>CUSTOMER DETAILS</p>\n            <div className={css.detailsImageWrapper}>\n              <img\n                className={css.detailsImage}\n                src={`${myContact.avatarURL}`}\n                alt=\"Contact\"\n              />\n            </div>\n            <input\n              className={css.detailsImageButton}\n              key={inputKey}\n              type=\"file\"\n              accept=\"image/*\"\n              name=\"avatar\"\n              onChange={handleImageChange}\n              id=\"allMobileTab\"\n              data-id={myContact._id}\n            />\n            <label className={css.detailsImageInput} htmlFor=\"allMobileTab\">\n              Update Customer Avatar +\n            </label>\n            <ul className={css.detailsWrapper}>\n              <li className={css.detailsItem}>\n                <span className={css.detailsCover}>\n                  <span className={css.detailsInfo}>\n                    <span className={css.details}>Name:</span>{' '}\n                    {isNameEditing === false ? (\n                      <span className={css.detailsVal}>\n                        <i className={css.detail}>{myContact.name}</i>\n                      </span>\n                    ) : (\n                      <input\n                        type=\"text\"\n                        className={css.detailsValInput}\n                        required\n                        onChange={handleNameChange}\n                        data-id={myContact._id}\n                        name=\"username\"\n                        defaultValue={myContact.name}\n                      />\n                    )}\n                  </span>\n                  <span className={css.buttonWrapper}>\n                    {isNameEditing === true && (\n                      <button\n                        className={css.detailsEditClose}\n                        onClick={handleNameEditClose}\n                      >\n                        <svg width=\"5px\" height=\"5px\" className={css.modalIcon}>\n                          <use href={`${svg}#icon-cross`}></use>\n                        </svg>\n                      </button>\n                    )}\n                    {isNameEditing === false ? (\n                      <button\n                        className={css.detailButton}\n                        onClick={handleNameEdit}\n                      >\n                        Edit\n                      </button>\n                    ) : (\n                      <button\n                        name={myContact._id}\n                        className={css.detailButton}\n                        onClick={handleNameSave}\n                      >\n                        Save\n                      </button>\n                    )}\n                  </span>\n                </span>\n              </li>\n              <li className={css.detailsItem}>\n                <span className={css.detailsCover}>\n                  <span className={css.detailsInfo}>\n                    <span className={css.details}>Email:</span>{' '}\n                    {isEmailEditing === false ? (\n                      <pre className={css.detailsDetailsVal}>\n                        <i className={css.detail}>{myContact.email}</i>\n                        {console.log(myContact.email)}\n                      </pre>\n                    ) : (\n                      <input\n                        type=\"text\"\n                        className={css.detailsDetailsValInput}\n                        required\n                        onChange={handleEmailChange}\n                        data-id={myContact._id}\n                        name=\"email\"\n                        title=\"Enter Customer Email\"\n                        defaultValue={myContact.email}\n                      />\n                    )}\n                  </span>\n                  <span className={css.buttonWrapper}>\n                    {isEmailEditing === true && (\n                      <button\n                        className={css.detailsEditClose}\n                        onClick={handleEmailEditClose}\n                      >\n                        <svg width=\"5px\" height=\"5px\" className={css.modalIcon}>\n                          <use href={`${svg}#icon-cross`}></use>\n                        </svg>\n                      </button>\n                    )}\n                    {isEmailEditing === false ? (\n                      <button\n                        className={css.detailButton}\n                        onClick={handleEmailEdit}\n                      >\n                        Edit\n                      </button>\n                    ) : (\n                      <button\n                        name={myContact._id}\n                        className={css.detailButton}\n                        onClick={handleEmailSave}\n                      >\n                        Save\n                      </button>\n                    )}\n                  </span>\n                </span>\n              </li>\n              <li className={css.detailsItem}>\n                <span className={css.detailsCover}>\n                  <span className={css.detailsInfo}>\n                    <span className={css.details}>Due Date:</span>{' '}\n                    {isPhoneEditing === false ? (\n                      <span className={css.detailsValPhone}>\n                        <i className={css.detail}>{dateValue}</i>\n                      </span>\n                    ) : (\n                      <Flatpickr\n                        data-enable-time\n                        value={date}\n                        onChange={selectedDates => {\n                          const nowDate = new Date();\n                          if (selectedDates[0] <= nowDate) {\n                            Notiflix.Notify.warning(\n                              'Choose a date in the future'\n                            );\n                          } else {\n                            Notiflix.Notify.success('Due Date Selected');\n                          }\n                          setDate(selectedDates[0]);\n                        }}\n                        options={{\n                          minuteIncrement: 1, // Set minute increments to 1\n                        }}\n                        render={({ defaultValue, ...props }, ref) => (\n                          <input\n                            {...props}\n                            ref={ref}\n                            className={css.detailsValInputPhone}\n                            required\n                            data-id={myContact._id}\n                            name=\"date\"\n                          />\n                        )}\n                      />\n                    )}\n                  </span>\n                  <span className={css.buttonWrapper}>\n                    {isPhoneEditing === true && (\n                      <button\n                        className={css.detailsEditClose}\n                        onClick={handlePhoneEditClose}\n                      >\n                        <svg width=\"5px\" height=\"5px\" className={css.modalIcon}>\n                          <use href={`${svg}#icon-cross`}></use>\n                        </svg>\n                      </button>\n                    )}\n                    {isPhoneEditing === false ? (\n                      <button\n                        className={css.detailButton}\n                        onClick={handlePhoneEdit}\n                      >\n                        Edit\n                      </button>\n                    ) : (\n                      <button\n                        name={myContact._id}\n                        className={css.detailButton}\n                        onClick={handlePhoneSave}\n                      >\n                        Save\n                      </button>\n                    )}\n                  </span>\n                </span>\n              </li>\n            </ul>\n          </div>\n        </div>\n      )}\n      <b\n        className={clsx(css.notification, {\n          [css.notificationShow]: isLoading && !error,\n        })}\n      >\n        Please wait...\n      </b>\n\n      {error && (\n        <b className={css.notificationShow}>\n          There was an error, refresh the page!!!\n        </b>\n      )}\n      <div\n        ref={sectionRef}\n        className={clsx(css.contactsDetailsHide, {\n          [css.contactsDetailsShow]: isOpenModal && isDesktop,\n        })}\n      >\n        {isSlideLoading && (\n          <div className={css.backDrop}>\n            <ThreeCircles\n              visible={true}\n              height=\"80\"\n              width=\"80\"\n              color=\"#9225ff\"\n              radius=\"9\"\n              ariaLabel=\"three-dots-loading\"\n              wrapperStyle={{}}\n              wrapperClass={css.loader}\n            />\n          </div>\n        )}\n        <button className={css.closeModal} onClick={handleModalClose}>\n          <svg width=\"10px\" height=\"10px\" className={css.modalIcon}>\n            <use href={`${svg}#icon-cross`}></use>\n          </svg>\n        </button>\n        <p className={css.detailsTitle}>CUSTOMER DETAILS</p>\n        <div className={css.detailsImageWrapper}>\n          <img\n            className={css.detailsImage}\n            src={myContact.avatarURL}\n            alt=\"Contact\"\n          />\n        </div>\n        <input\n          className={css.detailsImageButton}\n          key={inputKey}\n          type=\"file\"\n          accept=\"image/*\"\n          name=\"avatar\"\n          onChange={handleImageChange}\n          id=\"allDesktop\"\n          data-id={myContact._id}\n        />\n        <label className={css.detailsImageInput} htmlFor=\"allDesktop\">\n          Update Customer Avatar +\n        </label>\n        <ul className={css.detailsWrapper}>\n          <li className={css.detailsItem}>\n            <span className={css.detailsCover}>\n              <span className={css.detailsInfo}>\n                <span className={css.details}>Name:</span>{' '}\n                {isNameEditing === false ? (\n                  <span className={css.detailsVal}>\n                    <i className={css.detail}>{myContact.name}</i>\n                  </span>\n                ) : (\n                  <input\n                    type=\"text\"\n                    className={css.detailsValInput}\n                    required\n                    onChange={handleNameChange}\n                    data-id={myContact._id}\n                    name=\"username\"\n                    defaultValue={myContact.name}\n                  />\n                )}\n              </span>\n              <span className={css.buttonWrapper}>\n                {isNameEditing === true && (\n                  <button\n                    className={css.detailsEditClose}\n                    onClick={handleNameEditClose}\n                  >\n                    <svg width=\"5px\" height=\"5px\" className={css.modalIcon}>\n                      <use href={`${svg}#icon-cross`}></use>\n                    </svg>\n                  </button>\n                )}\n                {isNameEditing === false ? (\n                  <button className={css.detailButton} onClick={handleNameEdit}>\n                    Edit\n                  </button>\n                ) : (\n                  <button\n                    name={myContact._id}\n                    className={css.detailButton}\n                    onClick={handleNameSave}\n                  >\n                    Save\n                  </button>\n                )}\n              </span>\n            </span>\n          </li>\n          <li className={css.detailsItem}>\n            <span className={css.detailsCover}>\n              <span className={css.detailsInfo}>\n                <span className={css.details}>Email:</span>{' '}\n                {isEmailEditing === false ? (\n                  <pre className={css.detailsDetailsVal}>\n                    <i className={css.detail}>{myContact.email}</i>\n                    {console.log(myContact.email)}\n                  </pre>\n                ) : (\n                  <input\n                    type=\"text\"\n                    className={css.detailsDetailsValInput}\n                    required\n                    onChange={handleEmailChange}\n                    data-id={myContact._id}\n                    name=\"email\"\n                    title=\"Enter Customer Email\"\n                    defaultValue={myContact.email}\n                  />\n                )}\n              </span>\n              <span className={css.buttonWrapper}>\n                {isEmailEditing === true && (\n                  <button\n                    className={css.detailsEditClose}\n                    onClick={handleEmailEditClose}\n                  >\n                    <svg width=\"5px\" height=\"5px\" className={css.modalIcon}>\n                      <use href={`${svg}#icon-cross`}></use>\n                    </svg>\n                  </button>\n                )}\n                {isEmailEditing === false ? (\n                  <button\n                    className={css.detailButton}\n                    onClick={handleEmailEdit}\n                  >\n                    Edit\n                  </button>\n                ) : (\n                  <button\n                    name={myContact._id}\n                    className={css.detailButton}\n                    onClick={handleEmailSave}\n                  >\n                    Save\n                  </button>\n                )}\n              </span>\n            </span>\n          </li>\n          <li className={css.detailsItem}>\n            <span className={css.detailsCover}>\n              <span className={css.detailsInfo}>\n                <span className={css.details}>Due Date:</span>{' '}\n                {isPhoneEditing === false ? (\n                  <span className={css.detailsValPhone}>\n                    <i className={css.detail}>{dateValue}</i>\n                  </span>\n                ) : (\n                  <Flatpickr\n                    data-enable-time\n                    value={date}\n                    onChange={selectedDates => {\n                      const nowDate = new Date();\n                      if (selectedDates[0] <= nowDate) {\n                        Notiflix.Notify.warning('Choose a date in the future');\n                      } else {\n                        Notiflix.Notify.success('Due Date Selected');\n                      }\n                      setDate(selectedDates[0]);\n                    }}\n                    options={{\n                      minuteIncrement: 1, // Set minute increments to 1\n                    }}\n                    render={({ defaultValue, ...props }, ref) => (\n                      <input\n                        {...props}\n                        ref={ref}\n                        className={css.detailsValInputPhone}\n                        required\n                        data-id={myContact._id}\n                        name=\"date\"\n                      />\n                    )}\n                  />\n                )}\n              </span>\n              <span className={css.buttonWrapper}>\n                {isPhoneEditing === true && (\n                  <button\n                    className={css.detailsEditClose}\n                    onClick={handlePhoneEditClose}\n                  >\n                    <svg width=\"5px\" height=\"5px\" className={css.modalIcon}>\n                      <use href={`${svg}#icon-cross`}></use>\n                    </svg>\n                  </button>\n                )}\n                {isPhoneEditing === false ? (\n                  <button\n                    className={css.detailButton}\n                    onClick={handlePhoneEdit}\n                  >\n                    Edit\n                  </button>\n                ) : (\n                  <button\n                    name={myContact._id}\n                    className={css.detailButton}\n                    onClick={handlePhoneSave}\n                  >\n                    Save\n                  </button>\n                )}\n              </span>\n            </span>\n          </li>\n        </ul>\n      </div>\n      <div\n        className={clsx(css.sortedWrapper, {\n          [css.selected]: isOpenModal && isDesktop,\n        })}\n      >\n        <div></div>\n        <TasksAllList />\n      </div>\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["Loader","isCatPicsLoading","useSelector","selectIsCatPicsLoading","_jsx","_Fragment","children","className","css","ThreeCircles","visible","height","width","color","radius","ariaLabel","wrapperStyle","wrapperClass","TasksAllList","_ref","catPics","selectIsLoading","selectCatPics","selectError","useDispatch","useEffect","lightbox","SimpleLightbox","captionsData","captionDelay","closeText","animationSlide","destroy","_jsxs","style","position","concat","length","map","pic","id","href","url","src","alt","Contacts","sectionRef","useRef","_useState","useState","Date","_useState2","_slicedToArray","date","setDate","_useState3","_useState4","isNameEditing","setNameEdit","_useState5","_useState6","nameValue","setNameValue","_useState7","_useState8","isEmailEditing","setEmailEdit","_useState9","now","_useState10","inputKey","setInputKey","myContact","selectedSortedAllContact","_useState11","email","_useState12","emailValue","setEmailValue","_useState13","_useState14","isPhoneEditing","setPhoneEdit","_useState15","_useState16","dateValue","setDateValue","dispatch","isLoading","isOpenAllMobileAndTabModal","selectOpenAllMobileAndTabModal","isSlideLoading","selectedIsSlideLoading","error","isDesktop","useMediaQuery","query","isMobileOrTab","isOpenModal","selectOpenSortedAllModal","handleModalClose","closeSortedAllModal","closeAllMobileAndTabModal","handleNameChange","evt","nameRay","wrd","target","value","hasExceeded","_toConsumableArray","pop","join","Notiflix","handleNameEdit","boxShadow","setTimeout","document","querySelector","focus","handleNameSave","trim","idValue","name","updateSortedAllContactName","myUpdateId","handleNameEditClose","handleEmailChange","handleEmailEdit","handleEmailSave","updateSortedAllContactEmail","handleEmailEditClose","handlePhoneEdit","handlePhoneSave","exactDate","updateSortedAllContactPhone","dueDate","handlePhoneEditClose","handleImageChange","e","file","files","currentTarget","getAttribute","updateSortedAllContactAvatar","myFile","myId","userLocale","navigator","language","myDate","formatter","Intl","DateTimeFormat","year","month","day","hour","minute","second","hour12","format","scrollTimer","_sectionRef$current","current","scrollIntoView","behavior","clearTimeout","clsx","_defineProperty","onClick","svg","avatarURL","type","accept","onChange","_id","htmlFor","required","defaultValue","console","log","title","Flatpickr","selectedDates","nowDate","options","minuteIncrement","render","ref","props","_objectWithoutProperties","_excluded","_objectSpread","_ref2","_excluded2"],"sourceRoot":""}