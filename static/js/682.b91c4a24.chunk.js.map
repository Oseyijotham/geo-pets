{"version":3,"file":"static/js/682.b91c4a24.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/TasksCompletedList/TasksCompletedList.module.css?a025","components/TasksCompletedList/TasksCompletedList.jsx","webpack://react-homework-template/./src/components/SortedCompletedTasks/SortedCompletedTasks.module.css?d835","components/SortedCompletedTasks/icons.svg","components/SortedCompletedTasks/SortedCompletedTasks.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactsSection\":\"TasksCompletedList_contactsSection__zPZf2\",\"contactsTitle\":\"TasksCompletedList_contactsTitle__C-sbK\",\"contactsList\":\"TasksCompletedList_contactsList__rMpzJ\",\"contactsListAlt\":\"TasksCompletedList_contactsListAlt__1YXeP\",\"contactsData\":\"TasksCompletedList_contactsData__FCbD6\",\"contactsPhone\":\"TasksCompletedList_contactsPhone__o5lEI\",\"contactsItemWrapper\":\"TasksCompletedList_contactsItemWrapper__zitKQ\",\"contactsItem\":\"TasksCompletedList_contactsItem__gZe57\",\"contactsDetails\":\"TasksCompletedList_contactsDetails__0pLWn\",\"contactsName\":\"TasksCompletedList_contactsName__uqsAL\",\"checkbox\":\"TasksCompletedList_checkbox__86Cgb\",\"contactsButtonArea\":\"TasksCompletedList_contactsButtonArea__4SiYs\",\"contactsButton\":\"TasksCompletedList_contactsButton__iMJej\",\"navigationArea\":\"TasksCompletedList_navigationArea__rMVMK\",\"navigationButton\":\"TasksCompletedList_navigationButton__X7vix\"};","import { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { selectPlaces } from '../../redux/AppRedux/selectors';\nimport {\n  selectContactsFilter,\n  selectFilterDown,\n  selectError,\n  selectIsLoading,\n} from '../../redux/AppRedux/selectors';\nimport {\n  deleteContact,\n  openSortedCompletedModal,\n  fetchSortedCompletedContactById,\n  updateStatus,\n  openCompletedMobileAndTabModal,\n} from '../../redux/AppRedux/operations';\nimport css from './TasksCompletedList.module.css';\nexport const TasksCompletedList = ({ children }) => {\n  const contacts = useSelector(selectPlaces);\n  const filterDown = useSelector(selectFilterDown);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n  const handleDelete = evt => {\n    evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n    setTimeout(() => {\n      evt.target.style.boxShadow = 'none';\n    }, 1000);\n    dispatch(deleteContact(evt.target.name));\n    \n  };\n  const filterValue = useSelector(selectContactsFilter);\n\n  const handleModalOpen = (evt) => {\n    if (evt.target.getAttribute('data-id')) {\n      //console.log('Modal opened!');\n\n      const id = evt.currentTarget.getAttribute('data-id');\n      //console.log(id);\n      dispatch(fetchSortedCompletedContactById(id));\n      dispatch(openSortedCompletedModal());\n      dispatch(openCompletedMobileAndTabModal());\n    }\n  };\n  const [lowerLimit, setLowerLimit] = useState(0);\n  const [upperLimit, setUpperLimit] = useState(4);\n  const [newRay, setNewRay] = useState([]);\n\n\n  const handleForward = (evt) => {\n    evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n    setTimeout(() => {\n      evt.target.style.boxShadow = 'none';\n    }, 500);\n    //let fwdWar = lowerLimit + 4;\n    \n      setLowerLimit(lowerLimit + 4);\n      setUpperLimit(upperLimit + 4);\n    \n    /*if (filterValue !== \"\") {\n      console.log(\"OK\")\n      const str = filterUp;\n      const sto = filterDown\n      dispatch(handleFilterFowardUp(str));\n      dispatch(handleFilterFowardDown(sto));\n    }*/\n  }\n\n  const handleBackward = (evt) => {\n     evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n     setTimeout(() => {\n       evt.target.style.boxShadow = 'none';\n     }, 500);\n    //let fwdWar = lowerLimit + 4;\n    \n      setLowerLimit(lowerLimit - 4);\n      setUpperLimit(upperLimit - 4);\n    \n    /*if (filterValue !== '') {\n      const str1 = filterUp;\n      const sto1 = filterDown;\n       dispatch(handleFilterBackwardUp(str1));\n       dispatch(handleFilterBackwardDown(sto1));\n     }*/\n  };\n  \n  const handleChange = (evt) => {\n    dispatch(updateStatus({ status: evt.target.checked, myUpdateStatusId:evt.target.name}));\n  }\n\n  \n  const completedMatches = newRay.filter(contact => contact.status === true);\n\n  return (\n    <div className={css.contactsSection}>\n      <h3 className={css.contactsTitle}>Saved Places</h3>\n      {children}\n\n      {completedMatches.length === 0 && (\n        <div className={css.contactsListAlt}>\n          {isLoading && !error && (\n            <b className={css.notification}>Loading Tasks...</b>\n          )}\n          {!isLoading && !error && (\n            <b className={css.notification}>COMING SOON, STAY TUNED</b>\n          )}\n          {!isLoading && error && <b className={css.notification}>Error!!!</b>}\n        </div>\n      )}\n      {completedMatches.length !== 0 && (\n        <ul className={css.contactsList}>\n          {console.log(completedMatches)}\n          {completedMatches.map(contact => {\n            const myindex = completedMatches.indexOf(contact);\n            if (myindex >= lowerLimit && myindex < upperLimit) {\n              return (\n                <li\n                  key={contact._id}\n                  data-id={contact._id}\n                  className={css.contactsItem}\n                  onClick={handleModalOpen}\n                >\n                  <span className={css.contactsData} data-id={contact._id}>\n                    <input\n                      type=\"checkbox\"\n                      className={css.checkbox}\n                      checked={contact.status}\n                      name={contact._id}\n                      onChange={handleChange}\n                    />\n                    :{' '}\n                    <span className={css.contactsPhone} data-id={contact._id}>\n                      {contact.name}\n                    </span>\n                  </span>\n                  <span className={css.contactsButtonArea}>\n                    <button\n                      type=\"submit\"\n                      className={css.contactsButton}\n                      name={contact._id}\n                      onClick={handleDelete}\n                    >\n                      Delete\n                    </button>\n                  </span>\n                </li>\n              );\n            }\n          })}\n        </ul>\n      )}\n\n      <div className={css.navigationArea}>\n        {lowerLimit !== 0 && (\n          <button className={css.navigationButton} onClick={handleBackward}>\n            Prev\n          </button>\n        )}\n        {!(upperLimit > completedMatches.length) &&\n          upperLimit !== completedMatches.length && (\n            <button className={css.navigationButton} onClick={handleForward}>\n              Forward\n            </button>\n          )}\n      </div>\n\n      {filterValue !== '' && (\n        <div className={css.navigationArea}>\n          {filterDown !== 0 && (\n            <button className={css.navigationButton} onClick={handleBackward}>\n              Prev\n            </button>\n          )}\n          {/*!(filterUp > bestMatches.length) &&\n            filterUp !== bestMatches.length && (\n              <button className={css.navigationButton} onClick={handleForward}>\n                Forward\n              </button>\n            )*/}\n        </div>\n      )}\n    </div>\n  );\n};\n\n","// extracted by mini-css-extract-plugin\nexport default {\"notification\":\"SortedCompletedTasks_notification__6MTf5\",\"notificationShow\":\"SortedCompletedTasks_notificationShow__Jqwyy\",\"sortedWrapper\":\"SortedCompletedTasks_sortedWrapper__O6FpK\",\"coverWrapper\":\"SortedCompletedTasks_coverWrapper__-sMYd\",\"contactsWrapperSpace\":\"SortedCompletedTasks_contactsWrapperSpace__toNO9\",\"selected\":\"SortedCompletedTasks_selected__aEOTe\",\"contactsDetailsHide\":\"SortedCompletedTasks_contactsDetailsHide__N8FQh\",\"contactsDetailsShow\":\"SortedCompletedTasks_contactsDetailsShow__DR76z\",\"closeModal\":\"SortedCompletedTasks_closeModal__8X40X\",\"contactsDetailsArea\":\"SortedCompletedTasks_contactsDetailsArea__jikLk\",\"contactImage\":\"SortedCompletedTasks_contactImage__I0POj\",\"detailsTitle\":\"SortedCompletedTasks_detailsTitle__WzZ0n\",\"detailsSection\":\"SortedCompletedTasks_detailsSection__yjYF9\",\"detailsImageWrapper\":\"SortedCompletedTasks_detailsImageWrapper__WmOUk\",\"detailsImage\":\"SortedCompletedTasks_detailsImage__OpuBp\",\"detailsImageButton\":\"SortedCompletedTasks_detailsImageButton__JU0dd\",\"detailsImageInput\":\"SortedCompletedTasks_detailsImageInput__Cohik\",\"detailsSectionTitle\":\"SortedCompletedTasks_detailsSectionTitle__pmpFf\",\"detailsWrapper\":\"SortedCompletedTasks_detailsWrapper__yjCiP\",\"detailsItem\":\"SortedCompletedTasks_detailsItem__cGEhF\",\"detailsCover\":\"SortedCompletedTasks_detailsCover__84U5y\",\"detailsInfo\":\"SortedCompletedTasks_detailsInfo__1894o\",\"details\":\"SortedCompletedTasks_details__7ssqe\",\"detailsVal\":\"SortedCompletedTasks_detailsVal__zsUEv\",\"detailsDetailsVal\":\"SortedCompletedTasks_detailsDetailsVal__2OV3k\",\"detailsValPhone\":\"SortedCompletedTasks_detailsValPhone__wz3vy\",\"detailsValInput\":\"SortedCompletedTasks_detailsValInput__Fi0iS\",\"detailsDetailsValInput\":\"SortedCompletedTasks_detailsDetailsValInput__ggUq6\",\"detailsValInputPhone\":\"SortedCompletedTasks_detailsValInputPhone__NYQha\",\"backDrop\":\"SortedCompletedTasks_backDrop__Pvv+L\",\"loader\":\"SortedCompletedTasks_loader__7XXH7\",\"detailButton\":\"SortedCompletedTasks_detailButton__7I7pA\",\"buttonWrapper\":\"SortedCompletedTasks_buttonWrapper__Tkrr8\",\"detailsEditClose\":\"SortedCompletedTasks_detailsEditClose__2oCEp\",\"backdrop\":\"SortedCompletedTasks_backdrop__21qKB\",\"backdropIsHidden\":\"SortedCompletedTasks_backdropIsHidden__L9E3H\",\"modalWindow\":\"SortedCompletedTasks_modalWindow__Mw1fX\"};","var _defs;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgIcons(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-arrow\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12.586 27.414l-10-10c-0.781-0.781-0.781-2.047 0-2.828l10-10c0.781-0.781 2.047-0.781 2.828 0s0.781 2.047 0 2.828l-6.586 6.586h19.172c1.105 0 2 0.895 2 2s-0.895 2-2 2h-19.172l6.586 6.586c0.39 0.39 0.586 0.902 0.586 1.414s-0.195 1.024-0.586 1.414c-0.781 0.781-2.047 0.781-2.828 0z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-cross\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M31.708 25.708c0 0 0 0 0 0l-9.708-9.708 9.708-9.708c0 0 0 0 0 0 0.105-0.105 0.18-0.227 0.229-0.357 0.133-0.356 0.057-0.771-0.229-1.057l-4.586-4.586c-0.286-0.286-0.702-0.361-1.057-0.229-0.13 0.048-0.252 0.124-0.357 0.228 0 0 0 0 0 0l-9.708 9.708-9.708-9.708c0 0 0 0 0 0-0.105-0.104-0.227-0.18-0.357-0.228-0.356-0.133-0.771-0.057-1.057 0.229l-4.586 4.586c-0.286 0.286-0.361 0.702-0.229 1.057 0.049 0.13 0.124 0.252 0.229 0.357 0 0 0 0 0 0l9.708 9.708-9.708 9.708c0 0 0 0 0 0-0.104 0.105-0.18 0.227-0.229 0.357-0.133 0.355-0.057 0.771 0.229 1.057l4.586 4.586c0.286 0.286 0.702 0.361 1.057 0.229 0.13-0.049 0.252-0.124 0.357-0.229 0 0 0 0 0 0l9.708-9.708 9.708 9.708c0 0 0 0 0 0 0.105 0.105 0.227 0.18 0.357 0.229 0.356 0.133 0.771 0.057 1.057-0.229l4.586-4.586c0.286-0.286 0.362-0.702 0.229-1.057-0.049-0.13-0.124-0.252-0.229-0.357z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-enlarge\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32 0h-13l5 5-6 6 3 3 6-6 5 5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32 32v-13l-5 5-6-6-3 3 6 6-5 5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 32h13l-5-5 6-6-3-3-6 6-5-5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 0v13l5-5 6 6 3-3-6-6 5-5z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-enlarge2\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32 0v13l-5-5-6 6-3-3 6-6-5-5zM14 21l-6 6 5 5h-13v-13l5 5 6-6z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-pause\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM16 29c-7.18 0-13-5.82-13-13s5.82-13 13-13 13 5.82 13 13-5.82 13-13 13zM10 10h4v12h-4zM18 10h4v12h-4z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-play2\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16 0c-8.837 0-16 7.163-16 16s7.163 16 16 16 16-7.163 16-16-7.163-16-16-16zM16 29c-7.18 0-13-5.82-13-13s5.82-13 13-13 13 5.82 13 13-5.82 13-13 13zM12 9l12 7-12 7z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-play3\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M6 4l20 12-20 12z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-tv\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M30.662 9.003c-2.775-0.399-5.731-0.688-8.815-0.851l5.153-5.153-2-2-7.017 7.017c-0.656-0.011-1.317-0.017-1.983-0.017v0l-8-8-2 2 6.069 6.069c-3.779 0.133-7.386 0.454-10.731 0.935-0.86 3.366-1.338 7.086-1.338 10.997s0.477 7.63 1.338 10.997c4.489 0.645 9.448 1.003 14.662 1.003s10.173-0.358 14.662-1.003c0.86-3.366 1.338-7.086 1.338-10.997s-0.477-7.63-1.338-10.997zM26.997 27.331c-3.367 0.43-7.086 0.669-10.997 0.669s-7.63-0.239-10.997-0.669c-0.645-2.244-1.003-4.724-1.003-7.331s0.358-5.087 1.003-7.331c3.366-0.43 7.086-0.669 10.997-0.669s7.63 0.239 10.996 0.669c0.645 2.244 1.004 4.724 1.004 7.331s-0.358 5.087-1.003 7.331z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-volume-decrease\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16 14h16v4h-16v-4z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13 30c-0.26 0-0.516-0.102-0.707-0.293l-7.707-7.707h-3.586c-0.552 0-1-0.448-1-1v-10c0-0.552 0.448-1 1-1h3.586l7.707-7.707c0.286-0.286 0.716-0.372 1.090-0.217s0.617 0.519 0.617 0.924v26c0 0.404-0.244 0.769-0.617 0.924-0.124 0.051-0.254 0.076-0.383 0.076z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-volume-increase\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M32 18h-6v6h-4v-6h-6v-4h6v-6h4v6h6v4z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13 30c-0.26 0-0.516-0.102-0.707-0.293l-7.707-7.707h-3.586c-0.552 0-1-0.448-1-1v-10c0-0.552 0.448-1 1-1h3.586l7.707-7.707c0.286-0.286 0.716-0.372 1.090-0.217s0.617 0.519 0.617 0.924v26c0 0.404-0.244 0.769-0.617 0.924-0.124 0.051-0.254 0.076-0.383 0.076z\"\n  })), /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"icon-books\",\n    viewBox: \"0 0 36 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7 4h-6c-0.55 0-1 0.45-1 1v22c0 0.55 0.45 1 1 1h6c0.55 0 1-0.45 1-1v-22c0-0.55-0.45-1-1-1zM6 10h-4v-2h4v2z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17 4h-6c-0.55 0-1 0.45-1 1v22c0 0.55 0.45 1 1 1h6c0.55 0 1-0.45 1-1v-22c0-0.55-0.45-1-1-1zM16 10h-4v-2h4v2z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M23.909 5.546l-5.358 2.7c-0.491 0.247-0.691 0.852-0.443 1.343l8.999 17.861c0.247 0.491 0.852 0.691 1.343 0.443l5.358-2.7c0.491-0.247 0.691-0.852 0.443-1.343l-8.999-17.861c-0.247-0.491-0.852-0.691-1.343-0.443z\"\n  })))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgIcons);\nexport default __webpack_public_path__ + \"static/media/icons.77c8d2ef0bd65aab65a1e4f05688514c.svg\";\nexport { ForwardRef as ReactComponent };","import { TasksCompletedList } from '../TasksCompletedList/TasksCompletedList';\nimport { Filter } from '../Filter/Filter';\nimport { useEffect } from 'react';\nimport {\n  fetchContacts,\n  closeSortedCompletedModal,\n  updateSortedCompletedContactAvatar,\n  updateSortedCompletedContactName,\n  updateSortedCompletedContactEmail,\n  updateSortedCompletedContactPhone,\n  closeCompletedMobileAndTabModal,\n} from '../../redux/AppRedux/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport clsx from 'clsx';\nimport {\n  selectError,\n  selectIsLoading,\n  selectOpenSortedCompletedModal,\n  selectedSortedCompletedContact,\n  selectedIsSlideLoading,\n  selectOpenCompletedMobileAndTabModal,\n} from '../../redux/AppRedux/selectors';\nimport css from './SortedCompletedTasks.module.css';\nimport svg from './icons.svg';\nimport { ThreeCircles } from 'react-loader-spinner';\nimport { useState } from 'react';\nimport Notiflix from 'notiflix';\nimport Flatpickr from 'react-flatpickr';\nimport 'flatpickr/dist/themes/material_blue.css';\nimport { Suspense } from 'react';\nimport { useMediaQuery } from 'react-responsive';\nimport { useRef } from 'react';\n\nexport const Contacts = () => {\n  const [inputKey, setInputKey] = useState(Date.now());\n  const sectionRef = useRef(null);\n   const [date, setDate] = useState(new Date());\n  const [isNameEditing, setNameEdit] = useState(false);\n  const [nameValue, setNameValue] = useState(\"\");\n  const [isEmailEditing, setEmailEdit] = useState(false);\n   const myContact = useSelector(selectedSortedCompletedContact);\n  const [emailValue, setEmailValue] = useState(myContact.email);\n   const [isPhoneEditing, setPhoneEdit] = useState(false);\n   const [dateValue, setDateValue] = useState('');\n  //const [idValue, setIdValue] = useState('');\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const isOpenCompletedMobileAndTabModal = useSelector(selectOpenCompletedMobileAndTabModal);\n  //const contacts = useSelector(selectContacts);\n  const isSlideLoading = useSelector(selectedIsSlideLoading);\n \n  const error = useSelector(selectError);\n  const isDesktop = useMediaQuery({ query: '(min-width: 1280px)' });\n  const isMobileOrTab = useMediaQuery({ query: '(max-width: 1279px)' });\n  const isOpenModal = useSelector(selectOpenSortedCompletedModal);\n  \n\n const handleModalClose = () => {\n   dispatch(closeSortedCompletedModal());\n   setNameEdit(false);\n   setEmailEdit(false);\n   dispatch(closeCompletedMobileAndTabModal());\n  };\n\n  const handleNameChange = evt => { \n      const wrd = evt.target.value;\n           let hasExceeded = false;\n           let nameRay;\n           if (wrd.length > 30) {\n             nameRay = [...wrd];\n             nameRay.pop();\n             evt.target.value = nameRay.join('');\n             setNameValue(evt.target.value);\n             hasExceeded = true;\n       }\n           else {\n             setNameValue(evt.target.value);\n       }\n           if (hasExceeded === true) {\n             Notiflix.Notify.warning('Maximum Charater limit is 30');\n           }\n  }\n\n  const handleNameEdit = evt => { \n    setNameEdit(true);\n    //const input = document.getElementById('nameInput');\n    evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n    setTimeout(() => {\n      evt.target.style.boxShadow = 'none';\n      const input = document.querySelector('[name=\"username\"]');\n      input.focus();\n    }, 100);\n  }\n\n  const handleNameSave = evt => {\n    \n     if (nameValue.trim() !== '') {\n       const idValue = evt.target.name;\n       dispatch( updateSortedCompletedContactName({ name: nameValue, myUpdateId: idValue }));\n       setNameEdit(false);\n     } else if (nameValue.trim() === '') {\n       Notiflix.Notify.warning('Input is required');\n     }\n     evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n     setTimeout(() => {\n       evt.target.style.boxShadow = 'none';\n     }, 500);\n  };\n  \n   const handleNameEditClose = () => {\n     setNameEdit(false);\n   };\n\n    const handleEmailChange = evt => {\n      setEmailValue(evt.target.value);\n      /*const id = evt.currentTarget.getAttribute('data-id');\n    setIdValue(id);*/\n      const wrd = evt.target.value;\n      let hasExceeded = false;\n      let nameRay;\n      if (wrd.length > 200) {\n        nameRay = [...wrd];\n        nameRay.pop();\n        evt.target.value = nameRay.join('');\n        hasExceeded = true;\n      }\n      if (hasExceeded === true) {\n        Notiflix.Notify.warning('Maximum Charater limit is 200');\n      }\n    };\n\n    const handleEmailEdit = evt => {\n      setEmailEdit(true);\n      evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n      setTimeout(() => {\n        evt.target.style.boxShadow = 'none';\n        const input = document.querySelector('[name=\"email\"]');\n        input.focus();\n      }, 100);\n  };\n\n   const handleEmailSave = evt => {\n     if (emailValue.trim() !== '') {\n       const idValue = evt.target.name;\n       dispatch(updateSortedCompletedContactEmail({ email: emailValue, myUpdateId: idValue }));\n       setEmailEdit(false);\n     } else if (emailValue.trim() === '') {\n       Notiflix.Notify.warning('Input is required');\n     }\n     evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n     setTimeout(() => {\n       evt.target.style.boxShadow = 'none';\n     }, 500);\n   };\n\n  const handleEmailEditClose = () => {\n    setEmailEdit(false);\n    setEmailValue(myContact.email);\n  }\n\n \n   const handlePhoneEdit = evt => {\n     setPhoneEdit(true);\n     evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n     setTimeout(() => {\n       evt.target.style.boxShadow = 'none';\n       const input = document.querySelector('[name=\"date\"]');\n       input.focus();\n     }, 100);\n   };\n  \n  const handlePhoneSave = evt => {\n    /*if (phoneValue.trim() !== '') {*/\n    const idValue = evt.target.name;\n    const exactDate = new Date();\n    if (date <= exactDate) {\n      Notiflix.Notify.failure('Invalid date, choose a date in the future');\n    }\n    else{\n      dispatch(updateSortedCompletedContactPhone({ dueDate: date, myUpdateId: idValue }));\n    }\n      setPhoneEdit(false);\n    \n    /*} else if (phoneValue.trim() === '') {\n      Notiflix.Notify.warning('Input is Empty or Incorrect');\n    }*/\n    evt.target.style.boxShadow = 'inset 0 0 10px 5px rgba(0, 0, 0, 0.3)';\n    setTimeout(() => {\n      evt.target.style.boxShadow = 'none';\n    }, 500);\n  };\n \n  const handlePhoneEditClose = () => {\n    setPhoneEdit(false);\n  };\n  \n   const handleImageChange = e => {\n     const file = e.target.files[0];\n     const id = e.currentTarget.getAttribute('data-id');\n     //dispatch(updateAvatar({ avatar: file }));\n     //console.log({ avatar: file });\n     if (file) {\n       dispatch(updateSortedCompletedContactAvatar({ myFile: file, myId: id })); // Store the file under the key \"avatar\"\n     }\n     setInputKey(Date.now());\n   };\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  useEffect(() => {\n    setEmailValue(myContact.email);\n  }, [myContact.email]);\n\n   useEffect(() => {\n     setNameValue(myContact.name);\n   }, [myContact.name]);\n  \n     useEffect(() => {\n       //setPhoneValue(myContact.phone);\n       /*const date = new Date(myContact.phone);\n\n       const formattedDate = date.toLocaleDateString('en-GB', {\n         year: 'numeric',\n         month: '2-digit',\n         day: '2-digit',\n       });\n       setDateValue(formattedDate)*/\n\n       const userLocale = navigator.language; // e.g., \"en-US\" or \"fr-FR\"\n       const myDate = new Date(myContact.dueDate);\n\n      const formatter = new Intl.DateTimeFormat(userLocale, {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit',\n        second: '2-digit', // Optional: include seconds\n        hour12: true, // Optional: use 12-hour clock (set to false for 24-hour clock)\n      });\n       setDateValue(formatter.format(myDate));\n        \n     }, [myContact.dueDate]);\n  \n   useEffect(() => {\n     if (isOpenModal === true) {\n       const scrollTimer = setTimeout(() => {\n         sectionRef.current?.scrollIntoView({ behavior: 'smooth' });\n       }, 1000); // 1250ms delay\n\n       return () => clearTimeout(scrollTimer); // Cleanup on unmount\n     }\n   }, [isOpenModal]);\n\n  //console.log(myVal);\n\n  return (\n    <div\n      className={clsx(css.coverWrapper, {\n        [css.contactsWrapperSpace]: isOpenModal && isDesktop,\n      })}\n    >\n      {isMobileOrTab && (\n        <div\n          className={clsx(css.backdrop, {\n            [css.backdropIsHidden]: isOpenCompletedMobileAndTabModal,\n          })}\n        >\n          <div className={css.modalWindow}>\n            {isSlideLoading && (\n              <div className={css.backDrop}>\n                <ThreeCircles\n                  visible={true}\n                  height=\"80\"\n                  width=\"80\"\n                  color=\"#9225ff\"\n                  radius=\"9\"\n                  ariaLabel=\"three-dots-loading\"\n                  wrapperStyle={{}}\n                  wrapperClass={css.loader}\n                />\n              </div>\n            )}\n            <button className={css.closeModal} onClick={handleModalClose}>\n              <svg width=\"10px\" height=\"10px\" className={css.modalIcon}>\n                <use href={`${svg}#icon-cross`}></use>\n              </svg>\n            </button>\n            <p className={css.detailsTitle}>CUSTOMER DETAILS</p>\n            <div className={css.detailsImageWrapper}>\n              <img\n                className={css.detailsImage}\n                src={`${myContact.avatarURL}`}\n                alt=\"Contact\"\n              />\n            </div>\n            <input\n              className={css.detailsImageButton}\n              type=\"file\"\n              accept=\"image/*\"\n              name=\"avatar\"\n              key={inputKey}\n              onChange={handleImageChange}\n              id=\"completedMobileTab\"\n              data-id={myContact._id}\n            />\n            <label\n              className={css.detailsImageInput}\n              htmlFor=\"completedMobileTab\"\n            >\n              Update Customer Avatar +\n            </label>\n            <ul className={css.detailsWrapper}>\n              <li className={css.detailsItem}>\n                <span className={css.detailsCover}>\n                  <span className={css.detailsInfo}>\n                    <span className={css.details}>Name:</span>{' '}\n                    {isNameEditing === false ? (\n                      <span className={css.detailsVal}>\n                        <i className={css.detail}>{myContact.name}</i>\n                      </span>\n                    ) : (\n                      <input\n                        type=\"text\"\n                        className={css.detailsValInput}\n                        required\n                        onChange={handleNameChange}\n                        data-id={myContact._id}\n                        name=\"username\"\n                        defaultValue={myContact.name}\n                      />\n                    )}\n                  </span>\n                  <span className={css.buttonWrapper}>\n                    {isNameEditing === true && (\n                      <button\n                        className={css.detailsEditClose}\n                        onClick={handleNameEditClose}\n                      >\n                        <svg width=\"5px\" height=\"5px\" className={css.modalIcon}>\n                          <use href={`${svg}#icon-cross`}></use>\n                        </svg>\n                      </button>\n                    )}\n                    {isNameEditing === false ? (\n                      <button\n                        className={css.detailButton}\n                        onClick={handleNameEdit}\n                      >\n                        Edit\n                      </button>\n                    ) : (\n                      <button\n                        name={myContact._id}\n                        className={css.detailButton}\n                        onClick={handleNameSave}\n                      >\n                        Save\n                      </button>\n                    )}\n                  </span>\n                </span>\n              </li>\n              <li className={css.detailsItem}>\n                <span className={css.detailsCover}>\n                  <span className={css.detailsInfo}>\n                    <span className={css.details}>Email:</span>{' '}\n                    {isEmailEditing === false ? (\n                      <pre className={css.detailsDetailsVal}>\n                        <i className={css.detail}>{myContact.email}</i>\n                        {console.log(myContact.email)}\n                      </pre>\n                    ) : (\n                      <input\n                        type=\"text\"\n                        className={css.detailsDetailsValInput}\n                        required\n                        onChange={handleEmailChange}\n                        data-id={myContact._id}\n                        name=\"email\"\n                        title=\"Enter the details of your task\"\n                        defaultValue={myContact.email}\n                      />\n                    )}\n                  </span>\n                  <span className={css.buttonWrapper}>\n                    {isEmailEditing === true && (\n                      <button\n                        className={css.detailsEditClose}\n                        onClick={handleEmailEditClose}\n                      >\n                        <svg width=\"5px\" height=\"5px\" className={css.modalIcon}>\n                          <use href={`${svg}#icon-cross`}></use>\n                        </svg>\n                      </button>\n                    )}\n                    {isEmailEditing === false ? (\n                      <button\n                        className={css.detailButton}\n                        onClick={handleEmailEdit}\n                      >\n                        Edit\n                      </button>\n                    ) : (\n                      <button\n                        name={myContact._id}\n                        className={css.detailButton}\n                        onClick={handleEmailSave}\n                      >\n                        Save\n                      </button>\n                    )}\n                  </span>\n                </span>\n              </li>\n              <li className={css.detailsItem}>\n                <span className={css.detailsCover}>\n                  <span className={css.detailsInfo}>\n                    <span className={css.details}>Due Date:</span>{' '}\n                    {isPhoneEditing === false ? (\n                      <span className={css.detailsValPhone}>\n                        <i className={css.detail}>{dateValue}</i>\n                      </span>\n                    ) : (\n                      <Flatpickr\n                        data-enable-time\n                        value={date}\n                        onChange={selectedDates => {\n                          const nowDate = new Date();\n                          if (selectedDates[0] <= nowDate) {\n                            Notiflix.Notify.warning(\n                              'Choose a date in the future'\n                            );\n                          } else {\n                            Notiflix.Notify.success('Due Date Selected');\n                          }\n                          setDate(selectedDates[0]);\n                        }}\n                        options={{\n                          minuteIncrement: 1, // Set minute increments to 1\n                        }}\n                        render={({ defaultValue, ...props }, ref) => (\n                          <input\n                            {...props}\n                            ref={ref}\n                            className={css.detailsValInputPhone}\n                            required\n                            data-id={myContact._id}\n                            name=\"date\"\n                          />\n                        )}\n                      />\n                    )}\n                  </span>\n                  <span className={css.buttonWrapper}>\n                    {isPhoneEditing === true && (\n                      <button\n                        className={css.detailsEditClose}\n                        onClick={handlePhoneEditClose}\n                      >\n                        <svg width=\"5px\" height=\"5px\" className={css.modalIcon}>\n                          <use href={`${svg}#icon-cross`}></use>\n                        </svg>\n                      </button>\n                    )}\n                    {isPhoneEditing === false ? (\n                      <button\n                        className={css.detailButton}\n                        onClick={handlePhoneEdit}\n                      >\n                        Edit\n                      </button>\n                    ) : (\n                      <button\n                        name={myContact._id}\n                        className={css.detailButton}\n                        onClick={handlePhoneSave}\n                      >\n                        Save\n                      </button>\n                    )}\n                  </span>\n                </span>\n              </li>\n            </ul>\n          </div>\n        </div>\n      )}\n      <b\n        className={clsx(css.notification, {\n          [css.notificationShow]: isLoading && !error,\n        })}\n      >\n        Please wait...\n      </b>\n\n      {error && (\n        <b className={css.notificationShow}>\n          There was an error, logout and login again!!!\n        </b>\n      )}\n      <div\n        ref={sectionRef}\n        className={clsx(css.contactsDetailsHide, {\n          [css.contactsDetailsShow]: isOpenModal && isDesktop,\n        })}\n      >\n        {isSlideLoading && (\n          <div className={css.backDrop}>\n            <ThreeCircles\n              visible={true}\n              height=\"80\"\n              width=\"80\"\n              color=\"#9225ff\"\n              radius=\"9\"\n              ariaLabel=\"three-dots-loading\"\n              wrapperStyle={{}}\n              wrapperClass={css.loader}\n            />\n          </div>\n        )}\n        <button className={css.closeModal} onClick={handleModalClose}>\n          <svg width=\"10px\" height=\"10px\" className={css.modalIcon}>\n            <use href={`${svg}#icon-cross`}></use>\n          </svg>\n        </button>\n        <p className={css.detailsTitle}>CUSTOMER DETAILS</p>\n        <div className={css.detailsImageWrapper}>\n          <img\n            className={css.detailsImage}\n            src={myContact.avatarURL}\n            alt=\"Contact\"\n          />\n        </div>\n        <input\n          className={css.detailsImageButton}\n          type=\"file\"\n          accept=\"image/*\"\n          name=\"avatar\"\n          key={inputKey}\n          onChange={handleImageChange}\n          id=\"completedDesktop\"\n          data-id={myContact._id}\n        />\n        <label className={css.detailsImageInput} htmlFor=\"completedDesktop\">\n          Update Customer Avatar +\n        </label>\n        <ul className={css.detailsWrapper}>\n          <li className={css.detailsItem}>\n            <span className={css.detailsCover}>\n              <span className={css.detailsInfo}>\n                <span className={css.details}>Name:</span>{' '}\n                {isNameEditing === false ? (\n                  <span className={css.detailsVal}>\n                    <i className={css.detail}>{myContact.name}</i>\n                  </span>\n                ) : (\n                  <input\n                    type=\"text\"\n                    className={css.detailsValInput}\n                    required\n                    onChange={handleNameChange}\n                    data-id={myContact._id}\n                    name=\"username\"\n                    defaultValue={myContact.name}\n                  />\n                )}\n              </span>\n              <span className={css.buttonWrapper}>\n                {isNameEditing === true && (\n                  <button\n                    className={css.detailsEditClose}\n                    onClick={handleNameEditClose}\n                  >\n                    <svg width=\"5px\" height=\"5px\" className={css.modalIcon}>\n                      <use href={`${svg}#icon-cross`}></use>\n                    </svg>\n                  </button>\n                )}\n                {isNameEditing === false ? (\n                  <button className={css.detailButton} onClick={handleNameEdit}>\n                    Edit\n                  </button>\n                ) : (\n                  <button\n                    name={myContact._id}\n                    className={css.detailButton}\n                    onClick={handleNameSave}\n                  >\n                    Save\n                  </button>\n                )}\n              </span>\n            </span>\n          </li>\n          <li className={css.detailsItem}>\n            <span className={css.detailsCover}>\n              <span className={css.detailsInfo}>\n                <span className={css.details}>Email:</span>{' '}\n                {isEmailEditing === false ? (\n                  <pre className={css.detailsDetailsVal}>\n                    <i className={css.detail}>{myContact.email}</i>\n                  </pre>\n                ) : (\n                  <input\n                    type=\"text\"\n                    className={css.detailsDetailsValInput}\n                    required\n                    onChange={handleEmailChange}\n                    data-id={myContact._id}\n                    name=\"email\"\n                    title=\"Enter the details of your task\"\n                    defaultValue={myContact.email}\n                  />\n                )}\n              </span>\n              <span className={css.buttonWrapper}>\n                {isEmailEditing === true && (\n                  <button\n                    className={css.detailsEditClose}\n                    onClick={handleEmailEditClose}\n                  >\n                    <svg width=\"5px\" height=\"5px\" className={css.modalIcon}>\n                      <use href={`${svg}#icon-cross`}></use>\n                    </svg>\n                  </button>\n                )}\n                {isEmailEditing === false ? (\n                  <button\n                    className={css.detailButton}\n                    onClick={handleEmailEdit}\n                  >\n                    Edit\n                  </button>\n                ) : (\n                  <button\n                    name={myContact._id}\n                    className={css.detailButton}\n                    onClick={handleEmailSave}\n                  >\n                    Save\n                  </button>\n                )}\n              </span>\n            </span>\n          </li>\n          <li className={css.detailsItem}>\n            <span className={css.detailsCover}>\n              <span className={css.detailsInfo}>\n                <span className={css.details}>Due Date:</span>{' '}\n                {isPhoneEditing === false ? (\n                  <span className={css.detailsValPhone}>\n                    <i className={css.detail}>{dateValue}</i>\n                  </span>\n                ) : (\n                  <Flatpickr\n                    data-enable-time\n                    value={date}\n                    onChange={selectedDates => {\n                      const nowDate = new Date();\n                      if (selectedDates[0] <= nowDate) {\n                        Notiflix.Notify.warning('Choose a date in the future');\n                      } else {\n                        Notiflix.Notify.success('Due Date Selected');\n                      }\n                      setDate(selectedDates[0]);\n                    }}\n                    options={{\n                      minuteIncrement: 1, // Set minute increments to 1\n                    }}\n                    render={({ defaultValue, ...props }, ref) => (\n                      <input\n                        {...props}\n                        ref={ref}\n                        className={css.detailsValInputPhone}\n                        required\n                        data-id={myContact._id}\n                        name=\"date\"\n                      />\n                    )}\n                  />\n                )}\n              </span>\n              <span className={css.buttonWrapper}>\n                {isPhoneEditing === true && (\n                  <button\n                    className={css.detailsEditClose}\n                    onClick={handlePhoneEditClose}\n                  >\n                    <svg width=\"5px\" height=\"5px\" className={css.modalIcon}>\n                      <use href={`${svg}#icon-cross`}></use>\n                    </svg>\n                  </button>\n                )}\n                {isPhoneEditing === false ? (\n                  <button\n                    className={css.detailButton}\n                    onClick={handlePhoneEdit}\n                  >\n                    Edit\n                  </button>\n                ) : (\n                  <button\n                    name={myContact._id}\n                    className={css.detailButton}\n                    onClick={handlePhoneSave}\n                  >\n                    Save\n                  </button>\n                )}\n              </span>\n            </span>\n          </li>\n        </ul>\n      </div>\n      <div\n        className={clsx(css.sortedWrapper, {\n          [css.selected]: isOpenModal && isDesktop,\n        })}\n      >\n        <TasksCompletedList />\n      </div>\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["TasksCompletedList","_ref","children","filterDown","useSelector","selectPlaces","selectFilterDown","isLoading","selectIsLoading","error","selectError","dispatch","useDispatch","handleDelete","evt","target","style","boxShadow","setTimeout","deleteContact","name","filterValue","selectContactsFilter","handleModalOpen","getAttribute","id","currentTarget","fetchSortedCompletedContactById","openSortedCompletedModal","openCompletedMobileAndTabModal","_useState","useState","_useState2","_slicedToArray","lowerLimit","setLowerLimit","_useState3","_useState4","upperLimit","setUpperLimit","_useState5","_useState6","newRay","handleBackward","handleChange","updateStatus","status","checked","myUpdateStatusId","completedMatches","filter","contact","_jsxs","className","css","_jsx","length","console","log","map","myindex","indexOf","_id","onClick","type","onChange","Contacts","Date","now","inputKey","setInputKey","sectionRef","useRef","date","setDate","isNameEditing","setNameEdit","_useState7","_useState8","nameValue","setNameValue","_useState9","_useState10","isEmailEditing","setEmailEdit","myContact","selectedSortedCompletedContact","_useState11","email","_useState12","emailValue","setEmailValue","_useState13","_useState14","isPhoneEditing","setPhoneEdit","_useState15","_useState16","dateValue","setDateValue","isOpenCompletedMobileAndTabModal","selectOpenCompletedMobileAndTabModal","isSlideLoading","selectedIsSlideLoading","isDesktop","useMediaQuery","query","isMobileOrTab","isOpenModal","selectOpenSortedCompletedModal","handleModalClose","closeSortedCompletedModal","closeCompletedMobileAndTabModal","handleNameChange","nameRay","wrd","value","hasExceeded","_toConsumableArray","pop","join","Notiflix","handleNameEdit","document","querySelector","focus","handleNameSave","trim","idValue","updateSortedCompletedContactName","myUpdateId","handleNameEditClose","handleEmailChange","handleEmailEdit","handleEmailSave","updateSortedCompletedContactEmail","handleEmailEditClose","handlePhoneEdit","handlePhoneSave","exactDate","updateSortedCompletedContactPhone","dueDate","handlePhoneEditClose","handleImageChange","e","file","files","updateSortedCompletedContactAvatar","myFile","myId","useEffect","fetchContacts","userLocale","navigator","language","myDate","formatter","Intl","DateTimeFormat","year","month","day","hour","minute","second","hour12","format","scrollTimer","_sectionRef$current","current","scrollIntoView","behavior","clearTimeout","clsx","_defineProperty","ThreeCircles","visible","height","width","color","radius","ariaLabel","wrapperStyle","wrapperClass","href","concat","svg","src","avatarURL","alt","accept","htmlFor","required","defaultValue","title","Flatpickr","selectedDates","nowDate","options","minuteIncrement","render","ref","props","_objectWithoutProperties","_excluded","_objectSpread","_ref2","_excluded2"],"sourceRoot":""}